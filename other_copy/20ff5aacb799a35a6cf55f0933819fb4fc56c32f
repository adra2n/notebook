{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "from __future__ import absolute_import, unicode_literals\n",
    "\n",
    "import psycopg2\n",
    "import redis\n",
    "import re\n",
    "from celery import Task\n",
    "from pymongo import MongoClient, errors\n",
    "from path import Path\n",
    "Path('/root/notebook/stg/').cd()\n",
    "import conf\n",
    "\n",
    "\n",
    "class ConnectionTask(Task):\n",
    "    abstract = True\n",
    "    _dmdb = None\n",
    "    _dmdb_ctrip = None\n",
    "    _static_ctrip = None\n",
    "    _smdb = None\n",
    "    _pmdb = None\n",
    "    _static = None\n",
    "    _drdb = {}\n",
    "    _srdb = {}\n",
    "    _prdb_mast = {}\n",
    "    _prdb_paym = {}\n",
    "    _dpgdb = {}\n",
    "    _spgdb = {}\n",
    "    _ppgdb = {}\n",
    "    _rrdb = None\n",
    "\n",
    "    @property\n",
    "    def dmdb(self):\n",
    "        if ConnectionTask._dmdb is None:\n",
    "            _mc = MongoClient(conf.DEV_MONGO_HOST, replicaset=conf.REPLICASET_NAME)\n",
    "            ConnectionTask._dmdb = _mc['boluome']\n",
    "        return ConnectionTask._dmdb\n",
    "\n",
    "    @property\n",
    "    def dmdb_ctrip(self):\n",
    "        if ConnectionTask._dmdb_ctrip is None:\n",
    "            _mc = MongoClient(conf.CTRIP_MONGO_HOST)\n",
    "            ConnectionTask._dmdb_ctrip = _mc['ctrip']\n",
    "        return ConnectionTask._dmdb_ctrip\n",
    "\n",
    "    @property\n",
    "    def smdb(self):\n",
    "        if ConnectionTask._smdb is None:\n",
    "            _mc = MongoClient(conf.STG_MONGO_HOST, replicaset=conf.REPLICASET_NAME)\n",
    "            ConnectionTask._smdb = _mc['boluome']\n",
    "        return ConnectionTask._smdb\n",
    "\n",
    "    @property\n",
    "    def pmdb(self):\n",
    "        if ConnectionTask._pmdb is None:\n",
    "            _mc = MongoClient(conf.PRO_MONGO_HOST, replicaset=conf.REPLICASET_NAME)\n",
    "            ConnectionTask._pmdb = _mc['boluome']\n",
    "        return ConnectionTask._pmdb\n",
    "\n",
    "    @property\n",
    "    def static(self):\n",
    "        if ConnectionTask._static is None:\n",
    "            _mc = MongoClient(conf.STATIC_MONGO_HOST, replicaset=conf.REPLICASET_NAME)\n",
    "            ConnectionTask._static = _mc['boluome']\n",
    "        return ConnectionTask._static\n",
    "\n",
    "    @property\n",
    "    def static_ctrip(self):\n",
    "        if ConnectionTask._static_ctrip is None:\n",
    "            _mc = MongoClient(conf.STATIC_MONGO_HOST, replicaset=conf.REPLICASET_NAME)\n",
    "            ConnectionTask._static_ctrip = _mc['ctrip']\n",
    "        return ConnectionTask._static_ctrip\n",
    "\n",
    "    def drdb(self, db):\n",
    "        if ConnectionTask._drdb.get(db) is None:\n",
    "            ConnectionTask._drdb[db] = redis.StrictRedis(host=conf.DEV_REDIS_NEW_HOST,\n",
    "                                                         port=conf.REDIS_PORT,\n",
    "                                                         db=db, charset=\"utf-8\",\n",
    "                                                         decode_responses=True)\n",
    "        return ConnectionTask._drdb.get(db)\n",
    "\n",
    "    def srdb(self, db):\n",
    "        if ConnectionTask._srdb.get(db) is None:\n",
    "            ConnectionTask._srdb[db] = redis.StrictRedis(host=conf.STG_REDIS_NEW_HOST,\n",
    "                                                         port=conf.REDIS_PORT,\n",
    "                                                         db=db, charset=\"utf-8\",\n",
    "                                                         decode_responses=True)\n",
    "        return ConnectionTask._srdb.get(db)\n",
    "\n",
    "    def prdb_mast(self, db):\n",
    "        if ConnectionTask._prdb_mast.get(db) is None:\n",
    "            ConnectionTask._prdb_mast[db] = redis.StrictRedis(host=conf.PRO_REDIS_MAST_HOST,\n",
    "                                                              port=conf.REDIS_PORT,\n",
    "                                                              db=db, charset=\"utf-8\",\n",
    "                                                              decode_responses=True)\n",
    "        return ConnectionTask._prdb_mast.get(db)\n",
    "\n",
    "    def prdb_paym(self, db):\n",
    "        if ConnectionTask._prdb_paym.get(db) is None:\n",
    "            ConnectionTask._prdb_paym[db] = redis.StrictRedis(host=conf.PRO_REDIS_PAYM_HOST,\n",
    "                                                              port=conf.REDIS_PORT,\n",
    "                                                              db=db, charset=\"utf-8\",\n",
    "                                                              decode_responses=True)\n",
    "        return ConnectionTask._prdb_paym.get(db)\n",
    "\n",
    "    def dpgdb(self, db):\n",
    "        if ConnectionTask._dpgdb.get(db) is None:\n",
    "            ConnectionTask._dpgdb[db] = psycopg2.connect(\"host=192.168.0.8 dbname={} user=root password=Boluome123\".format(db))\n",
    "        return ConnectionTask._dpgdb.get(db)\n",
    "\n",
    "    def spgdb(self, db):\n",
    "        if ConnectionTask._spgdb.get(db) is None:\n",
    "            ConnectionTask._spgdb[db] = psycopg2.connect(\"host=192.168.2.10 dbname={} user=root password=Boluome123\".format(db))\n",
    "        return ConnectionTask._spgdb.get(db)\n",
    "\n",
    "    def ppgdb(self, db):\n",
    "        if ConnectionTask._ppgdb.get(db) is None:\n",
    "            ConnectionTask._ppgdb[db] = psycopg2.connect('host=pg.localdomain dbname={} user=root password=Boluome123'.format(db))\n",
    "        return ConnectionTask._ppgdb.get(db)\n",
    "\n",
    "    @property\n",
    "    def rrdb(self):\n",
    "        if ConnectionTask._rrdb is None:\n",
    "            ConnectionTask._rrdb = redis.StrictRedis(host=conf.RRDB_HOST,\n",
    "                                                     port=conf.RRDB_PORT,\n",
    "                                                     db=conf.RRDB_DB,\n",
    "                                                     encoding='utf-8',\n",
    "                                                     decode_responses=True)\n",
    "        return ConnectionTask._rrdb\n",
    "\n",
    "    def __getitem__(self, key):\n",
    "        if key == \"dmdb\":\n",
    "            return ConnectionTask.dmdb\n",
    "        elif key == \"smdb\":\n",
    "            return ConnectionTask.smdb\n",
    "        elif key == \"pmdb\":\n",
    "            return ConnectionTask.pmdb\n",
    "        elif key == \"static\":\n",
    "            return ConnectionTask.static\n",
    "        else:\n",
    "            raise KeyError"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "a=ConnectionTask()\n",
    "b=ConnectionTask()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(Database(MongoClient(host=['192.168.0.10:27017', '192.168.0.7:27017'], document_class=dict, tz_aware=False, connect=True, replicaset='foba'), 'boluome'),\n",
       " Database(MongoClient(host=['192.168.0.10:27017', '192.168.0.7:27017'], document_class=dict, tz_aware=False, connect=True, replicaset='foba'), 'boluome'))"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b._dmdb,a._dmdb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "({0: StrictRedis<ConnectionPool<Connection<host=192.168.2.6,port=6379,db=0>>>},\n",
       " {0: StrictRedis<ConnectionPool<Connection<host=192.168.2.6,port=6379,db=0>>>})"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a._srdb,b._srdb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "StrictRedis<ConnectionPool<Connection<host=192.168.2.6,port=6379,db=0>>>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.srdb(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(Database(MongoClient(host=['192.168.0.10:27017', '192.168.0.7:27017'], document_class=dict, tz_aware=False, connect=True, replicaset='foba'), 'boluome'),\n",
       " {0: StrictRedis<ConnectionPool<Connection<host=192.168.2.6,port=6379,db=0>>>})"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c=ConnectionTask()\n",
    "c._dmdb,c._srdb"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
