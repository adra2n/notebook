{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from connection import ConnectionTask\n",
    "from pprint import pprint\n",
    "import requests\n",
    "import json\n",
    "c=ConnectionTask()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'code': 10001, 'message': 'connect ECONNREFUSED 121.40.81.230:89'}"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import requests\n",
    "requests.get(\"http://192.168.0.5:31031/dengjifuwu/v1/readcheckindatas\",headers={}).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "requests.get(\"http://192.168.0.6:8011/status\").json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# requests.get(\"http://192.168.0.6:8010/sm/order/fetch\",\n",
    "#             params={\"orderType\":\"jipiao\",\"passengers.ticketNo\": 'xep171009114412846'}).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "43"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url='http://lb01.localdomain:8024/query/maoyan/hot_movie_list?cityId=10'\n",
    "resp = requests.get(url).json()\n",
    "# for item in resp['data']:\n",
    "#     if item.get(\"name\") == \"战狼2\":\n",
    "#         pprint(item)\n",
    "#         continue\n",
    "len(resp['data'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": false,
    "tags": [
     "citysAPI"
    ]
   },
   "outputs": [],
   "source": [
    "# %%timeit\n",
    "#citys\n",
    "resp=requests.get(\"http://lb01.localdomain:8024/query/citys/dianying/kou\").json()\n",
    "resp['data']\n",
    "with open(\"kou_citys.json\",'w') as f:\n",
    "    json.dump(resp['data'],f,indent=2,ensure_ascii=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "17.2 ms ± 1.46 ms per loop (mean ± std. dev. of 7 runs, 100 loops each)\n"
     ]
    }
   ],
   "source": [
    "%%timeit\n",
    "url=\"http://192.168.2.6:8010/operation/query/cache_jipiao\"\n",
    "body={\"filter\":{\"route\":\"SHA-CGO-2018-03-01\"}}\n",
    "resp=requests.post(url,json=body).json()\n",
    "resp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "url='http://consul.localdomain:8500/v1/kv/dev/session?raw'\n",
    "resp = requests.get(url,params={'index': 306315, 'wait': '5s'},headers={'Content-Type':'application/json'})\n",
    "resp.headers,resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "resp.headers['Content-Type'] = 'application/json'\n",
    "resp.headers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "resp=requests.post(\"http://192.168.1.39:8015/query_cinemas\").json()\n",
    "len(resp['data'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "print(json.dumps(resp['data'][0],indent=4,ensure_ascii=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "import time\n",
    "start=time.time()\n",
    "resp=requests.post(\"http://192.168.1.39:8015/query_the_list_of_show\",json={\"cinemaId\":24341}).json()\n",
    "# resp\n",
    "print(time.time()-start)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "r=requests.request(method='GET',url='http://192.168.0.5:31031/dengjifuwu/v1/readcheckindatas',params={'ttt':'222'},data={'aa':11})\n",
    "r.status_code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "body={'id': 'bl002023504347282', 'partnerId': '18214731', 'channel': 'yl'}\n",
    "post_url=\"http://192.168.0.5:31011/piaowu/callback/yl/order/update\"\n",
    "requests.post(url=post_url,data=body,params=None).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# %%timeit\n",
    "import requests\n",
    "import json\n",
    "import re\n",
    "payload={ 'cityId':'50' }\n",
    "\n",
    "url=\"http://lb01.localdomain:8024/query/maoyan/cinema_list\"\n",
    "resp=requests.post(url=url,data=json.dumps(payload)).json()\n",
    "resp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# %%timeit\n",
    "url=\"http://192.168.0.6:8024/query/maoyan/hot_movie_list?cityId=50\"\n",
    "resp = requests.get(url).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# %%timeit\n",
    "# mongo_rest\n",
    "# payload={'method': 'findOne', 'query': {'appCode': 'me', 'channel': 'ofpay'}}\n",
    "# url=\"http://192.168.0.6:8024/mongodb_query/huafei_config\"\n",
    "\n",
    "payload={\n",
    "    'method': 'find', \n",
    "    'query': {\n",
    "        'price': {'$gt': 0}, \n",
    "        'cityCode': '2', \n",
    "        'location': {\n",
    "            '$nearSphere': {\n",
    "                '$geometry': {\n",
    "                    'type': \n",
    "                    'Point', \n",
    "                    'coordinates': [121.44770825902101, 31.303378796152994]\n",
    "                }, \n",
    "                '$minDistance': 0, \n",
    "                '$maxDistance': 50000\n",
    "            }\n",
    "        }\n",
    "    }, \n",
    "    'skip': 20, \n",
    "    'limit': 10\n",
    "}\n",
    "url=\"http://lb01.localdomain:8024/mongodb_query/jiudian_hotels\"\n",
    "\n",
    "resp=requests.post(url=url,data=json.dumps(payload)).json()\n",
    "len(resp['data'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[398.0, 218.0, 199.0, 198.0, 198.0, 160.0, 158.0, 158.0, 150.0, 130.0]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "payload={\n",
    "    'method': 'aggregate', \n",
    "    'query': [{\"$match\":{\"city\":\"上海\",\"province\":\"上海\"}},{\"$sort\":{\"price\":-1}},{\"$skip\":0},{\"$limit\":10},{\"$project\":{\"_id\":0,\"dis\":1,\"id\":1,\"name\":1,\"grade\":1,\"address\":1,\"province\":1,\"city\":1,\"summary\":1,\"lng\":1,\"lat\":1,\"alias\":1,\"traffic\":1,\"notes\":1,\"introduce\":1,\"ticketType\":1,\"ticketTypeName\":1,\"picture\":1,\"price\":1}}]\n",
    "}\n",
    "url=\"http://lb01.localdomain:8024/mongodb_query/menpiao_scenic_tongcheng\"\n",
    "\n",
    "resp=requests.post(url=url,data=json.dumps(payload)).json()\n",
    "# resp['data'][0]\n",
    "[item.get('price') for item in resp['data']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#删除缓存\n",
    "import requests\n",
    "requests.get(\"http://lb01.localdomain:8024/mongodb_query/delete/dianying_cinema_mao\").json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'code': 0,\n",
      " 'data': ['迪奥-auto-2016071210192729哈哈~~~',\n",
      "          'cctest11',\n",
      "          '呼吸-auto-20161015152638407',\n",
      "          '雅婷测试活动-auto-20161022150115505',\n",
      "          '酥饼-auto-20160829114802534',\n",
      "          '风头-auto-20160829114834313',\n",
      "          'Dior-莫兮自动化【勿动】',\n",
      "          '蜂巢供应链华东仓品牌-auto-20161103160459254',\n",
      "          '组团购品牌-auto-20161025152510072',\n",
      "          '同仁堂',\n",
      "          '雅培哈哈哈',\n",
      "          'xubin测试品牌2-auto-20170331162736019',\n",
      "          '宁波亚马逊保税仓263-auto-20161109113436365'],\n",
      " 'message': 'a244c46a84458e03d082279672646afb'}\n"
     ]
    }
   ],
   "source": [
    "payload={\n",
    "    'method': 'distinct', \n",
    "    'query': ['brandName', {'thirdCategoryName': '香水'}]\n",
    "}\n",
    "url=\"http://192.168.0.6:8024/mongodb_query/shopping_kaola\"\n",
    "\n",
    "resp=requests.post(url=url,data=json.dumps(payload)).json()\n",
    "pprint(resp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# 退款流水号 补偿机制\n",
    "refund_data={'appCode': '91ala',\n",
    "             'id': 'ala201471626215464',\n",
    "             'orderType': 'coffee',\n",
    "             'price': 42,\n",
    "             'reason': '',\n",
    "             'refundSource': 2,\n",
    "             'supplire': 'linqu',\n",
    "             'type': 1,\n",
    "             'userPhone': '13512119091'}\n",
    "resp=requests.post('http://saasapi.localdomain:21009/refund/save', json=refund_data)\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# 中原银行超时取消支付确认接口\n",
    "body = {'orderId': 'bl001728389972461', 'userId': 'test_long', 'status': 8, 'displayStatus': '已取消'}\n",
    "resp=requests.post(url='http://192.168.0.5:32020/status', json=body)\n",
    "resp.status_code==200\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# session.update\n",
    "url='http://192.168.0.6:8010/sm/order/update'\n",
    "body={'id':'fdb003482010648592'}\n",
    "resp=requests.post(url=url,json=body)\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'code': 20000, 'message': '无效的订单状态流转'}"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url=\"http://192.168.2.2:21003/status\"\n",
    "params = {'orderType': 'menpiao', 'id': 'bl103541803859978'}, \n",
    "body = {'statuses': \n",
    "        [{'code': 9, 'msg': '已取消 申请退款'}, \n",
    "         {'code': 11, 'msg': '等待退款'}], \n",
    "        'opts': {'partnerStatusCode': 3, 'canCancel': 0}}\n",
    "requests.put(url,params={\"id\":\"bl103541803859978\",\"orderType\":\"menpiao\"},json=body).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'code': 0}"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# session.lmm_push_order_cancel\n",
    "url='http://192.168.2.6:8010/state/lmm_push_order_cancel'\n",
    "body={'signed': '29e9cf90f7ea9ddcb04d436f772f94a0', \n",
    "      'order': {'orderId': '59323598', \n",
    "                'partnerOrderID': 'bl103541803859978', \n",
    "                'orderStatus': 'CANCEL', \n",
    "                'requestStatus': 'PASS', \n",
    "                'refundAmount': '200', \n",
    "                'factorage': '0', \n",
    "                'refundInfo': 'API分销商在线申请退款,退款金额：2.0,单位(元)'}\n",
    "     }\n",
    "resp=requests.post(url=url,json=body)\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'code': 0}"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# session.lmm_push_order_info\n",
    "url='http://192.168.2.6:8010/state/lmm_push_order_info'\n",
    "body={'request': {'header': {'signed': '29e9cf90f7ea9ddcb04d436f772f94a0'}, \n",
    "                  'body': {'order': {'orderId': '59323598', 'status': 'NORMAL', 'approveStatus': 'true', 'paymentStatus': 'PAYED', 'credenctStatus': 'CREDENCE_SEND', 'waitPayment': '', 'performStatus': 'UNUSE'}}}}\n",
    "resp=requests.post(url=url,json=body)\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'code': -1, 'message': '无此订单缓存'}"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# session.fetch\n",
    "url='http://192.168.0.6:8010/sm/order/fetch/me003141387813455'\n",
    "# url='http://sessionapi.localdomain:8010/sm/order/fetch/bsb203620054372798'\n",
    "resp=requests.get(url=url)\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'code': 0, 'message': 'success'}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# session.operation.isnert\n",
    "url='http://192.168.0.6:8010/operation/insert/fuelCard'\n",
    "resp=requests.post(url=url,json={\n",
    "    'document': {'id': 'test1008611', 'cardId': '1000113100009539139', 'userName': '', 'credentialNum': '', 'phone': '13023066636', 'showBasisNameList': ['autohome', 'pingan-one', 'localhost'], 'isShowBasis': False, 'customerUserId': 'blm_test', 'credentialType': '身份证', 'categoryId': '1'}\n",
    "})\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'code': 0,\n",
       " 'data': {'matchedCount': 1, 'modifiedCount': 1},\n",
       " 'message': 'success'}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# session.operation.update\n",
    "url='http://192.168.0.6:8010/operation/update/fuelCard'\n",
    "resp=requests.post(url=url,json={\n",
    "    'filter': {'customerUserId': 'blm_test','categoryId': '1'},\n",
    "    \"update\": {\"$set\":{\"test\":1}}\n",
    "})\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'<html><body><h1>502 Bad Gateway</h1>\\nThe server returned an invalid or incomplete response.\\n</body></html>\\n\\n'"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 更新退款流水为退款成功\n",
    "url='http://refundapi.localdomain:21009/refund/{}/success'.format('91ala')\n",
    "body={'orderId': 'ala203521115465356','serialNum': 'ala223529871734562'}\n",
    "requests.post(url=url,json=body).text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# 订单中心API\n",
    "ORDER_CENTER_URL = 'http://192.168.2.2:21003'\n",
    "# session API\n",
    "SESSION_URL = 'http://192.168.2.6:8010'\n",
    "class CallApiToUpdateOrder(object):\n",
    "    def __init__(self, timeout=10):\n",
    "        self.timeout = timeout\n",
    "    def call_api_to_update_order_status(self, params, body):\n",
    "        try:\n",
    "            resp_data = requests.put(url=ORDER_CENTER_URL + '/status', params=params, json=body, timeout=self.timeout).json()\n",
    "        except (requests.ConnectionError, requests.exceptions.ConnectionError, Exception):\n",
    "            traceback.print_exc()\n",
    "            return self.call_api_to_update_order_status(params, body)\n",
    "        return resp_data\n",
    "    def call_api_to_update_order_form(self, body):\n",
    "        try:\n",
    "            resp_data = requests.post(url=SESSION_URL + '/sm/order/update', json=body, timeout=self.timeout).json()\n",
    "        except (requests.ConnectionError, requests.exceptions.ConnectionError, Exception):\n",
    "            traceback.print_exc()\n",
    "            return self.call_api_to_update_order_form(body)\n",
    "        return resp_data\n",
    "call_api=CallApiToUpdateOrder()\n",
    "data={'orderId':'blm101265011655066','orderType':'waimai'}\n",
    "params={'orderType': data['orderType'], 'id': data['orderId']}\n",
    "body={\"statuses\": [{\"code\": 9, \"msg\": \"订单失败\"},\n",
    "                                     {\"code\": 11, \"msg\": \"等待退款\"}],\n",
    "                        \"opts\": {'canCancel': 0,\n",
    "                                'partnerStatusCode': 16}}\n",
    "call_api.call_api_to_update_order_status(params,body)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# 刘鑫金华银行超时订单支付验证 by dev\n",
    "payload={'orderId':'jhb002171912192094'}\n",
    "requests.get('http://192.168.0.12:32019/jhbank/update/order',params=payload).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# 刘鑫金华银行超时订单支付验证 by pro\n",
    "payload={'orderId':'jhb202201587557432'}\n",
    "requests.get('http://saasjavaapi.localdomain:32019/jhbank/update/order',params=payload).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#session.fetch_lite_list 接口\n",
    "url='http://192.168.2.6:8010/sm/order/fetch_lite_list'\n",
    "data={'userId':'blm_3xksnq9'}\n",
    "requests.post(url=url,json=data).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "bp203756416337454 {'code': 20000, 'message': '无效的订单状态流转'}\n",
      "ala203812722519561 {'code': 20000, 'message': '无效的订单状态流转'}\n",
      "bp203668513410303 {'code': 20000, 'message': '无效的订单状态流转'}\n",
      "bp203668556024997 {'code': 20000, 'message': '无效的订单状态流转'}\n"
     ]
    }
   ],
   "source": [
    "# 取消订单接口\n",
    "ORDER_CENTER_URL = \"http://orderapi.localdomain:21003/cancel\"\n",
    "import requests\n",
    "\n",
    "def order_center_cancel(order_id):\n",
    "    \"\"\"根据订单号做取消订单操作，包含更新订单状态为等待退款，生成退款流水等。\n",
    "    Args:\n",
    "        order_id(str): orderId\n",
    "    \"\"\"\n",
    "    order_message = requests.get(f'http://dpp.boluome.com/order/search/{order_id}').json()\n",
    "    querystring = {\"id\":order_id,\"orderType\":order_message['data']['orderType']}\n",
    "    response = requests.request(\"PUT\", ORDER_CENTER_URL, params=querystring)\n",
    "    return response.json()\n",
    "\n",
    "for order_id in 'bp203756416337454、ala203812722519561、bp203668513410303、bp203668556024997'.split('、'):\n",
    "    resp = order_center_cancel(order_id)\n",
    "    resp.pop('data',None)\n",
    "    print(order_id,resp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# rabbitmq代理接口\n",
    "import requests\n",
    "body={\n",
    "    \"exchangeName\":\"session\",\n",
    "    \"routingKey\":\"task\",\n",
    "    \"payload\":{'taskName': 'worker.expire.expire_fetch', \n",
    "               'queue': 'celery', \n",
    "               'args': {'orderId': 'bp203360152624455', 'userId': 'bestpay_17358489839', 'appCode': 'bestpay', 'orderType': 'waimai', 'channel': 'ele', 'partnerId': '3018723039701747783'}}\n",
    "}\n",
    "resp=requests.post('http://192.168.0.6:8672/rabbitmq/publish',json=body)\n",
    "resp.json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 调用彭老师的支付成功接口\n",
    "url = 'http://orderapi.localdomain:21003/paySuccess'\n",
    "\n",
    "for mongo_data in c.pmdb.order_evoucher.find({'displayStatus':'已支付'},{'_id':0,'id':1,'orderType':1,'payChannel':1,'timeline_new':1,'paymentSerial':1}):\n",
    "#     print(mongo_data)\n",
    "    timeline_new = mongo_data['timeline_new'][:-1]\n",
    "#     print(timeline_new)\n",
    "    c.pmdb.order_evoucher.update_one({'id':mongo_data['id']},{'$set':{'status':2,'timeline_new':timeline_new}})\n",
    "    requests.get('http://dpp.boluome.com/order/sync?orderId={}'.format(mongo_data['id']))\n",
    "    \n",
    "    body = {\n",
    "        'id':mongo_data['id'],\n",
    "        'orderType':mongo_data['orderType'],\n",
    "        'payChannel':mongo_data['payChannel'],\n",
    "        'serialNum':mongo_data['paymentSerial']\n",
    "    }\n",
    "    resp_data = requests.post(url,json=body).json()\n",
    "    print(resp_data)\n",
    "    print(phone,mongo_data['id'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'{\"code\": 0, \"message\": \"Success\", \"data\": [{\"categoryKey\": \"secondCategoryName\", \"categoryValue\": \"香水\"}, {\"categoryKey\": \"secondCategoryName\", \"categoryValue\": \"组合装销售属性\"}, {\"categoryKey\": \"secondCategoryName\", \"categoryValue\": \"男士护肤1\"}]}'"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "resp = requests.get('http://192.168.0.6:8024/query/kaola/category/secondCategoryName?firstCategoryName=美容彩妆').json()\n",
    "json.dumps(resp,ensure_ascii=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'code': 0,\n",
       " 'data': [{'goodsId': 6720750, 'price': 28.0},\n",
       "  {'goodsId': 4179394, 'price': 45.88},\n",
       "  {'goodsId': 58708796, 'price': 49.0},\n",
       "  {'goodsId': 58949541, 'price': 50.0},\n",
       "  {'goodsId': 58942428, 'price': 50.0},\n",
       "  {'goodsId': 10204244, 'price': 70.0},\n",
       "  {'goodsId': 1720994, 'price': 76.0},\n",
       "  {'goodsId': 1720994, 'price': 80.0},\n",
       "  {'goodsId': 1720994, 'price': 90.0},\n",
       "  {'goodsId': 1720994, 'price': 100.0},\n",
       "  {'goodsId': 1226800, 'price': 180.0},\n",
       "  {'goodsId': 1226800, 'price': 200.0},\n",
       "  {'goodsId': 5705, 'price': 299.0},\n",
       "  {'goodsId': 10220018, 'price': 399.0},\n",
       "  {'goodsId': 58708835, 'price': 460.0},\n",
       "  {'goodsId': 49614843, 'price': 499.0},\n",
       "  {'goodsId': 49614845, 'price': 499.0},\n",
       "  {'goodsId': 49614887, 'price': 499.0},\n",
       "  {'goodsId': 49614873, 'price': 499.0},\n",
       "  {'goodsId': 49614855, 'price': 499.0}],\n",
       " 'message': 'Success'}"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# %%timeit\n",
    "body = {\n",
    "    \"queryText\":\"男士护肤\",\n",
    "    \"highPrice\":500,\n",
    "    \"projection\":\"price,goodsId\",\n",
    "    \"sortBy\":\"price:asc\"\n",
    "}\n",
    "requests.post('http://192.168.0.6:8024/query/kaola/goods/search',json=body).json()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
