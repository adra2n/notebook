{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# coding: utf-8\n",
    "from __future__ import absolute_import, unicode_literals\n",
    "\n",
    "import datetime\n",
    "import hashlib\n",
    "import json\n",
    "import logging\n",
    "import math\n",
    "import re\n",
    "import time\n",
    "import ast\n",
    "from pprint import pprint\n",
    "\n",
    "import redis\n",
    "import requests\n",
    "import xmltodict\n",
    "from celery import Celery, Task, platforms\n",
    "from pymongo import MongoClient\n",
    "import conf\n",
    "from connection import ConnectionTask\n",
    "\n",
    "\n",
    "class XiechengTask(ConnectionTask):\n",
    "    abstract = True\n",
    "\n",
    "    def __init__(self):\n",
    "        self._rrdb = None\n",
    "        self._lrdb = None\n",
    "\n",
    "    @property\n",
    "    def rdb(self):\n",
    "        return super().prdb_paym(2)\n",
    "    @property\n",
    "    def prdb_mast_0(self):\n",
    "        return super().prdb_mast(0)\n",
    "    @property\n",
    "    def rdb_0(self):\n",
    "        return super().prdb_paym(0)\n",
    "    @property\n",
    "    def payment(self):\n",
    "        return super().prdb_paym(1)\n",
    "    @property\n",
    "    def refund(self):\n",
    "        return super().prdb_paym(2)\n",
    "    @property\n",
    "    def rrdb(self):\n",
    "        if self._rrdb is None:\n",
    "            self._rrdb = redis.StrictRedis(host='rrdb.localdomain',\n",
    "                                          port=16379,\n",
    "                                          db=0,\n",
    "                                          charset=\"UTF-8\",\n",
    "                                          decode_responses=True)\n",
    "        return self._rrdb\n",
    "    @property\n",
    "    def nrdb(self):\n",
    "        if self._rrdb is None:\n",
    "            self._rrdb = redis.StrictRedis(host='192.168.2.6',\n",
    "                                          port=6379,\n",
    "                                          db=0,\n",
    "                                          charset=\"UTF-8\",\n",
    "                                          decode_responses=True)\n",
    "        return self._rrdb\n",
    "    @property\n",
    "    def lrdb(self):\n",
    "        if self._lrdb is None:\n",
    "            self._lrdb = redis.StrictRedis(host='127.0.0.1',\n",
    "                                           port=6379,\n",
    "                                           db=0,\n",
    "                                           charset=\"UTF-8\",\n",
    "                                           decode_responses=True)\n",
    "        return self._lrdb\n",
    "    def __getitem__(self, key):\n",
    "        if key == \"dev\":\n",
    "            return self.dmdb\n",
    "        elif key == \"stg\":\n",
    "            return self.smdb\n",
    "        elif key == \"pro\":\n",
    "            return self.pmdb\n",
    "        elif key == \"static\":\n",
    "            return self.static\n",
    "        else:\n",
    "            raise KeyError\n",
    "x=XiechengTask()\n",
    "c=ConnectionTask()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'start' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-16-e3e4803aa57d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpmdb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0morder_lite_list\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m\"createdAt\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m\"$gt\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'start' is not defined"
     ]
    }
   ],
   "source": [
    "c.pmdb.order_lite_list.count({\"createdAt\":{\"$gt\":start}})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "print(c.drdb_new(0).set(\"test\",\"test\",ex=10,nx=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.drdb_new(0).exists(\"test\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "bp203556214308983 已取消\n",
      "ala203556214046837 已取消\n",
      "bp203556212998259 已取消\n",
      "bp203556209983601 已取消\n",
      "bp203556204888153 美食制作中\n",
      "bp203556202283062 美食制作中\n",
      "bp203556186931287 美食制作中\n",
      "bp203556185997421 美食制作中\n",
      "bp203556179066966 美食制作中\n",
      "bp203556176953450 美食制作中\n",
      "bp203556176855091 已取消\n",
      "bp203556176724017 已取消\n",
      "bp203556172759145 配送中\n",
      "bp203556162551893 已取消\n",
      "bp203556152066132 已取消\n",
      "bp203556150362195 已取消\n",
      "ala203556148019245 已取消\n",
      "ala203556143300652 已取消\n",
      "ala203556138418279 已取消\n",
      "bp203556135305258 已取消\n",
      "ala203556128866383 已取消\n",
      "bp203556128751657 异常\n",
      "ala203556125835365 已取消\n",
      "ala203556124786788 配送中\n",
      "bp203556124688422 配送中\n",
      "bp203556123885645 配送中\n",
      "bp203556122968139 配送中\n",
      "bp203556122853413 已取消\n",
      "bp203556122574922 已取消\n",
      "bp203556115890249 配送中\n",
      "bp203556112597087 配送中\n",
      "bcm203556107370568 已完成\n",
      "ala203556106567773 已取消\n",
      "bp203556101455964 配送中\n",
      "bp203556095590434 已取消\n",
      "ddc203556094902362 已取消\n",
      "bp203556088741976 已取消\n",
      "ala203556087169111 已取消\n",
      "aip203556082204741 出票中\n",
      "ala203556079829077 已取消\n",
      "aip203556079042644 异常\n",
      "bp203556077224003 已取消\n",
      "ala203556074995778 已取消\n",
      "bp203556067655744 已取消\n",
      "bp203556064788510 已取消\n",
      "smy203556064247870 已取消\n",
      "bp203556063346717 配送中\n",
      "ddc203556060446781 已取消\n",
      "bp203556059791419 已完成\n",
      "bl203556059021339 已取消\n",
      "bp203556058873913 配送中\n",
      "bp203556058759194 配送中\n",
      "ala203556057169975 已完成\n",
      "bp203556051943449 已取消\n",
      "ala203556050731085 已取消\n",
      "bp203556047978572 已取消\n",
      "bp203556040917045 已取消\n",
      "aip203556040900683 已取消\n",
      "bp203556039229461 已取消\n",
      "ala203556038688820 已取消\n",
      "bp203556035936306 已完成\n",
      "ala203556027547696 配送中\n",
      "bp203556026122259 已完成\n",
      "bp203556022714386 已完成\n",
      "bp203556020748305 配送中\n",
      "bp203556009312325 配送中\n",
      "ala203556006297668 等待配送\n",
      "bp203556003676227 配送中\n",
      "bp203556003446797 已完成\n",
      "bp203556002529291 已取消\n",
      "bp203556002365506 已取消\n",
      "bp203555989930025 已取消\n",
      "bl203555982721064 已取消\n",
      "bp203555982213129 等待退款\n",
      "ala203555981934630 已取消\n",
      "ala203555980640264 已取消\n",
      "bp203555979313188 已完成\n",
      "blm203555974742022 已完成\n",
      "smy203555973677089 已取消\n",
      "ala203555973677088 已取消\n",
      "bp203555971203076 配送中\n",
      "bp203555967139843 配送中\n",
      "ala203555966222338 已取消\n",
      "bp203555964125185 已取消\n",
      "bp203555962912825 已完成\n",
      "ala203555961471032 已取消\n",
      "bp203555960946742 已取消\n",
      "bp203555960569885 已完成\n",
      "ala203555959783451 已取消\n",
      "ala203555959652377 已取消\n",
      "bp203555958718516 已完成\n",
      "bp203555957424150 配送中\n",
      "smy203555955834930 已取消\n",
      "ala203555955703856 已取消\n",
      "test203555955572743 已取消\n",
      "test203555955572742 已取消\n",
      "bp203555955458068 已完成\n",
      "test203555955441669 已取消\n",
      "test203555955441668 已取消\n",
      "test203555955441667 已取消\n",
      "bp203555954933779 已取消\n",
      "bp203555953213485 等待退款\n",
      "test203555951509506 已取消\n",
      "bp203555950592043 配送中\n",
      "test203555949543425 已取消\n",
      "test203555947577344 已取消\n",
      "bp203555943006224 已完成\n",
      "bp203555941826575 配送中\n",
      "ddc203555940369195 已取消\n",
      "bp203555939991564 已取消\n",
      "bp203555938534185 已取消\n",
      "bp203555937894410 已完成\n",
      "bp203555934093320 已取消\n",
      "bp203555931456295 已取消\n",
      "test203555929899015 已取消\n",
      "test203555929767942 已取消\n",
      "test203555929767941 已取消\n",
      "test203555929767940 已取消\n",
      "test203555929767939 已取消\n",
      "ala203555929227303 已取消\n",
      "test203555925835778 已取消\n",
      "ala203555925557285 已取消\n",
      "bp203555925164068 已取消\n",
      "bp203555924640549 已取消\n",
      "bp203555924508706 等待退款\n",
      "test203555923869697 已取消\n",
      "ala203555923329826 配送中\n",
      "smy203555922936608 已取消\n",
      "bp203555922018336 已完成\n",
      "test203555921903616 已取消\n",
      "vjr203555919790111 已取消\n",
      "bp203555914154012 已取消\n",
      "bl203555913760794 等待退款\n",
      "bp203555905258813 配送中\n",
      "bp203555903930393 已完成\n",
      "bp203555903537948 已取消\n",
      "ddc203555903143959 已取消\n",
      "bp203555902096154 异常\n",
      "bp203555901965081 已完成\n",
      "bp203555901308949 配送中\n",
      "bp203555900540218 已取消\n",
      "ayd203555898032148 已取消\n",
      "bp203555897770772 已取消\n",
      "bp203555897638930 配送中\n",
      "bp203555896214838 异常\n",
      "bp203555894904116 已取消\n",
      "bp203555891889458 配送中\n",
      "bp203555890692109 已完成\n",
      "bp203555887957297 已取消\n",
      "ala203555887153163 已取消\n",
      "ala203555886629648 已取消\n",
      "ddc203555886498575 已取消\n",
      "bp203555884269577 已取消\n",
      "bp203555884156206 已完成\n",
      "ala203555883614216 已取消\n",
      "bp203555881648906 已取消\n",
      "bp203555879158536 已取消\n",
      "bp203555879044396 配送中\n",
      "ala203555878765319 已取消\n",
      "ala203555873653510 已取消\n",
      "test203555872473095 已取消\n",
      "test203555872473094 已取消\n",
      "test203555872473093 已取消\n",
      "test203555872473092 已取消\n",
      "test203555872473091 已取消\n",
      "bp203555872359720 配送中\n",
      "bp203555871048998 已完成\n",
      "bp203555869345060 已取消\n",
      "test203555868409858 已取消\n",
      "smy203555867903266 已取消\n",
      "test203555866443777 已取消\n",
      "bl203555866313475 已退款\n",
      "test203555864477696 已取消\n",
      "bp203555862250241 等待退款\n",
      "bl203555861201663 已取消\n",
      "smy203555860170016 已取消\n",
      "bp203555857924860 已取消\n",
      "bp203555857138426 已取消\n",
      "bp203555856483065 已取消\n",
      "ala203555855713565 已取消\n",
      "bp203555855058203 已取消\n",
      "bp203555852961050 已取消\n",
      "bp203555849667318 已完成\n",
      "ala203555848749812 已取消\n",
      "bp203555848504601 已完成\n",
      "bp203555848487860 已取消\n",
      "smy203555848094451 已取消\n",
      "bp203555847701233 已完成\n",
      "ala203555846652655 已取消\n",
      "bp203555844441366 已完成\n",
      "bsb203555843506926 已取消\n",
      "ala203555842065331 已取消\n",
      "bp203555841671916 已取消\n",
      "bp203555839443890 已取消\n",
      "vjr203555835135251 已取消\n",
      "bp203555834462954 已取消\n",
      "ala203555828581650 已取消\n",
      "bp203555826074344 配送中\n",
      "ala203555824518415 等待退款\n",
      "smy203555816899502 已取消\n",
      "vjr203555816112871 已取消\n",
      "bl203555812066572 已取消\n",
      "vjr203555801957292 已取消\n",
      "bp203555801301931 已完成\n",
      "bsb203555799991010 已取消\n",
      "bp203555798549217 已完成\n",
      "bp203555798287272 已取消\n",
      "bl203555796714207 已取消\n",
      "bp203555796452062 已取消\n",
      "ala203555795665830 已完成\n",
      "bp203555794224036 配送中\n",
      "ala203555793306530 已取消\n",
      "bl203555793306332 已退款\n",
      "bl203555791619335 已取消\n",
      "vjr203555791095045 已取消\n",
      "bp203555787556100 已取消\n",
      "bp203555785590018 配送中\n",
      "bp203555785458944 已完成\n",
      "bp203555785048991 已完成\n",
      "bp203555784393630 已完成\n",
      "bp203555782968572 已取消\n",
      "bp203555782165404 已完成\n",
      "bp203555777971099 已完成\n",
      "bp203555777332473 已取消\n",
      "bp203555774973176 已取消\n",
      "bp203555774300887 已取消\n",
      "bp203555773252310 已完成\n",
      "ala203555772597144 已取消\n",
      "bp203555771941589 已完成\n",
      "bp203555771286423 已完成\n",
      "bp203555771155350 配送中\n",
      "bp203555770909940 已完成\n",
      "bl203555769713362 已取消\n",
      "ala203555769206002 已取消\n",
      "bp203555769058000 配送中\n",
      "bp203555768795855 已完成\n",
      "bp203555765929201 已完成\n",
      "smy203555764208530 已取消\n",
      "bp203555763553168 已完成\n",
      "bp203555763438831 已完成\n",
      "bp203555762897613 配送中\n",
      "bp203555762259182 已取消\n",
      "ala203555762111179 已取消\n",
      "bp203555761079532 已完成\n",
      "bp203555757392782 已取消\n",
      "bp203555756999565 已取消\n",
      "bp203555756213132 已取消\n",
      "ddc203555755033287 已取消\n",
      "vjr203555753084136 已取消\n",
      "bp203555751494537 已完成\n",
      "bp203555749790599 已取消\n",
      "bp203555748234471 已取消\n",
      "vjr203555747300229 处理中\n",
      "bp203555746513605 已完成\n",
      "ok203555746382723 已取消\n",
      "bp203555745088740 已取消\n",
      "ala203555744416451 已取消\n",
      "bp203555743122658 已完成\n",
      "bsb203555742581442 已完成\n",
      "bp203555741139649 已取消\n",
      "bp203555736289984 已取消\n",
      "bp203555733275326 已完成\n",
      "bsb203555732751233 已完成\n",
      "bl203555732636894 已取消\n",
      "bp203555731326172 已取消\n",
      "bp203555729867450 已取消\n",
      "bp203555728966875 已完成\n",
      "bp203555728835802 已取消\n",
      "bl203555724100478 已取消\n",
      "smy203555723445117 已完成\n",
      "ala203555723051702 已退款\n",
      "ala203555721479035 已完成\n",
      "bl203555719512954 已取消\n",
      "ala203555716760244 已取消\n",
      "bp203555714548952 已取消\n",
      "bp203555712041847 已完成\n",
      "bp203555712058582 已取消\n",
      "ddc203555707716273 已取消\n",
      "bp203555706798965 已取消\n",
      "bp203555705619120 已完成\n",
      "ala203555704570740 已取消\n",
      "bp203555704194258 等待退款\n",
      "bp203555703145681 已完成\n",
      "bp203555702866605 已取消\n",
      "bp203555702342316 已完成\n",
      "bp203555700655310 已完成\n",
      "bp203555698279083 已完成\n",
      "bp203555697230506 已完成\n",
      "bp203555696985292 配送中\n",
      "bp203555695919984 已完成\n",
      "smy203555695543499 已取消\n",
      "bp203555694494922 已完成\n",
      "bp203555694232777 已取消\n",
      "bp203555693429412 配送中\n",
      "bp203555691987618 已完成\n",
      "bp203555689383112 已完成\n",
      "smy203555687662241 已取消\n",
      "bp203555686482796 已取消\n",
      "bp203555682436294 已完成\n",
      "ala203555682026347 已取消\n",
      "bp203555680076997 已完成\n",
      "bp203555678618268 已完成\n",
      "vjr203555677963113 已取消\n",
      "bp203555677569896 已完成\n",
      "bp203555676259175 已取消\n",
      "bp203555674178755 已完成\n",
      "bp203555673261249 已取消\n",
      "bp203555671671448 已取消\n",
      "bp203555671688383 等待退款\n",
      "vjr203555670754149 已取消\n",
      "bp203555669967510 已完成\n",
      "bp203555664200547 已取消\n",
      "ala203555664200546 已取消\n",
      "bp203555662889618 已取消\n",
      "bp203555661071549 已完成\n",
      "bp203555659874961 已取消\n",
      "bp203555659350672 已完成\n",
      "ddc203555659219805 已取消\n",
      "bp203555659088526 已完成\n",
      "bp203555658302092 已完成\n",
      "bp203555657925818 已取消\n",
      "bp203555654239067 已取消\n",
      "bp203555653600440 已完成\n",
      "bp203555653452424 配送中\n",
      "bp203555652665991 已完成\n",
      "ala203555652010630 已取消\n",
      "bp203555648471684 已取消\n",
      "ala203555648209754 已完成\n",
      "bp203555647292035 已取消\n",
      "ala203555645063810 已取消\n",
      "bp203555643638962 已取消\n",
      "bp203555643622231 已取消\n",
      "bp203555642721456 已完成\n",
      "bp203555640755375 已完成\n",
      "ala203555640476288 已取消\n",
      "bp203555640362157 已完成\n",
      "bp203555635905708 已完成\n",
      "bp203555634857131 已完成\n",
      "bp203555634201769 配送中\n",
      "bp203555633939624 已完成\n",
      "bp203555632612179 已取消\n",
      "smy203555632480891 已取消\n",
      "ala203555631563386 取消中\n",
      "bp203555630777169 已完成\n",
      "bp203555629089957 已完成\n",
      "smy203555628565668 已取消\n",
      "ala203555628417869 已取消\n",
      "bp203555628303523 已完成\n",
      "bp203555628024651 已完成\n",
      "bp203555626320504 已取消\n",
      "bp203555624616566 已取消\n",
      "bp203555623584928 已取消\n",
      "bp203555623584927 已完成\n",
      "bl203555620815689 已取消\n",
      "bp203555618194248 已取消\n",
      "ala203555616375965 已取消\n",
      "bp203555614131013 已取消\n",
      "bp203555613868660 已完成\n",
      "bp203555612689219 已完成\n",
      "bp203555612296002 已完成\n",
      "bp203555612033651 已完成\n",
      "bp203555611133081 已完成\n",
      "bp203555608118424 已取消\n",
      "bp203555607987351 已完成\n",
      "bp203555607725206 已取消\n",
      "bp203555602613397 已取消\n",
      "bp203555601564819 已完成\n",
      "bp203555599205521 已取消\n",
      "bp203555598943376 已完成\n",
      "bp203555598795581 已完成\n",
      "bp203555598664302 已完成\n",
      "bp203555596960364 已完成\n",
      "ala203555596567147 已取消\n",
      "bp203555596042858 已完成\n",
      "ala203555594601274 已取消\n",
      "bp203555593683558 已完成\n",
      "bp203555593159269 已取消\n",
      "ala203555592372836 已取消\n",
      "bp203555590406755 已取消\n",
      "bp203555590013751 已取消\n",
      "bp203555589506186 已取消\n",
      "smy203555587392308 已取消\n",
      "bp203555586884744 已取消\n",
      "ala203555584132231 已完成\n",
      "bp203555583739013 已完成\n",
      "bp203555583459937 已完成\n",
      "smy203555582542641 已取消\n",
      "bp203555581887071 已完成\n",
      "bp203555580200068 已完成\n",
      "bp203555578741551 已取消\n",
      "ddc203555578610477 已取消\n",
      "ala203555578610475 已取消\n",
      "bp203555578627202 已取消\n",
      "ala203555577955114 已取消\n",
      "ayd203555577561897 已取消\n",
      "bp203555577430618 已取消\n",
      "smy203555575857959 已取消\n",
      "bp203555573498455 已取消\n",
      "ala203555570221654 已退款\n",
      "bp203555567355004 已取消\n",
      "ala203555566289702 已取消\n",
      "smy203555565503269 已取消\n",
      "bp203555565388923 已取消\n",
      "bp203555564995704 已完成\n",
      "bp203555564978978 已取消\n",
      "ala203555564864630 已取消\n",
      "bp203555564716627 已完成\n",
      "smy203555564209268 已取消\n",
      "bp203555560260382 已完成\n",
      "bp203555555410513 已完成\n",
      "ala203555555410511 已完成\n",
      "bp203555554624284 已完成\n",
      "bp203555553461361 已取消\n",
      "bp203555551478555 配送中\n",
      "bp203555551347276 已完成\n",
      "bp203555551102063 已取消\n",
      "bp203555550691914 已取消\n",
      "bp203555548611694 已完成\n",
      "bp203555546759960 已完成\n",
      "bp203555546366535 已取消\n",
      "ala203555546252396 已取消\n",
      "bp203555545187094 已取消\n",
      "bp203555543762027 已完成\n",
      "vjr203555543745300 已取消\n",
      "bp203555542844521 配送中\n",
      "bp203555539944002 已取消\n",
      "bp203555539812929 已取消\n",
      "bp203555538764562 已取消\n",
      "smy203555538764561 已取消\n",
      "bp203555538240272 已完成\n",
      "bp203555537978127 已完成\n",
      "vjr203555536011837 已取消\n",
      "bp203555534570253 已取消\n",
      "ala203555532210748 已取消\n",
      "bp203555531965539 已取消\n",
      "bp203555531834466 已取消\n",
      "ala203555530375948 已完成\n",
      "bp203555529065018 已完成\n",
      "bp203555528819808 已取消\n",
      "bp203555528426590 配送中\n",
      "bp203555526591581 已取消\n",
      "bp203555526312715 已取消\n",
      "bp203555526312503 已取消\n",
      "bp203555524608778 已取消\n",
      "bp203555524215349 已取消\n",
      "ala203555523166984 已取消\n",
      "ala203555521987335 已取消\n",
      "bp203555521872983 已完成\n",
      "bp203555519758900 已完成\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "bp203555514647090 已完成\n",
      "bp203555511780436 配送中\n",
      "bp203555510977284 已取消\n",
      "vjr203555510076499 已取消\n",
      "bp203555508617776 已取消\n",
      "bp203555507192913 已完成\n",
      "bp203555507175983 异常\n",
      "bp203555506127406 异常\n",
      "smy203555505865261 已取消\n",
      "bp203555505226830 配送中\n",
      "bp203555505079039 异常\n",
      "bp203555504964685 已退款\n",
      "bp203555504685612 异常\n",
      "ala203555504161323 已取消\n",
      "bp203555502064170 等待退款\n",
      "bp203555500360233 异常\n",
      "bp203555499574011 异常\n",
      "ala203555499442728 已取消\n",
      "ddc203555498263289 已取消\n",
      "bp203555498148939 异常\n",
      "bp203555497362506 已取消\n",
      "vjr203555496821496 已取消\n",
      "bp203555496838217 异常\n",
      "bp203555496428279 已完成\n",
      "bp203555496034852 已取消\n",
      "bp203555495379490 已取消\n",
      "smy203555491709685 已取消\n",
      "bp203555489629254 已完成\n",
      "bp203555489088032 已取消\n",
      "bp203555488694815 已取消\n",
      "bp203555484910660 已取消\n",
      "bp203555483451934 已完成\n",
      "bp203555482944577 已完成\n",
      "bp203555480568561 等待退款\n",
      "smy203555480306205 已取消\n",
      "bsb203555480175132 已完成\n",
      "bp203555479388912 已完成\n",
      "bp203555478602266 等待退款\n",
      "ddc203555478094909 已取消\n",
      "bp203555477946905 已完成\n",
      "bp203555477570617 配送中\n",
      "bp203555477570618 已完成\n",
      "bp203555477308472 已完成\n",
      "ok203555475981035 已取消\n",
      "bp203555475849751 已完成\n",
      "bp203555475194389 已取消\n",
      "bp203555475063315 配送中\n",
      "bp203555474932242 已完成\n",
      "bp203555474687029 等待退款\n",
      "bp203555474687028 已取消\n",
      "bp203555472966378 已取消\n",
      "bp203555470213865 已取消\n",
      "bp203555469689576 已完成\n",
      "bp203555468264499 已完成\n",
      "smy203555467478066 已取消\n",
      "bp203555467084849 已完成\n",
      "bp203555466822703 已完成\n",
      "bp203555463397900 已取消\n",
      "bp203555462218467 已完成\n",
      "bp203555462104110 已完成\n",
      "bp203555461431817 已完成\n",
      "bp203555460252385 已取消\n",
      "bp203555459875884 已完成\n",
      "bp203555459334663 已完成\n",
      "bp203555457106438 已完成\n",
      "bp203555456189152 已取消\n",
      "bp203555452256772 已取消\n",
      "bp203555451470339 已完成\n",
      "bp203555450290690 配送中\n",
      "bp203555448455680 配送中\n",
      "bp203555447669247 已完成\n",
      "bp203555444654590 配送中\n",
      "bp203555444147237 已取消\n",
      "bp203555443475161 配送中\n",
      "bp203555443081723 已完成\n",
      "bp203555442295290 已完成\n",
      "ddc203555441656866 已取消\n",
      "bp203555441115641 已完成\n",
      "bp203555441001505 已完成\n",
      "bp203555439805141 已完成\n",
      "bp203555439673847 已完成\n",
      "bp203555438232054 已完成\n",
      "bp203555436921555 已取消\n",
      "ddc203555435741905 已取消\n",
      "smy203555434578975 已取消\n",
      "bp203555434037748 已取消\n",
      "bp203555431678669 已完成\n",
      "bp203555429205021 已取消\n",
      "bp203555427353291 配送中\n",
      "ayd203555426566858 已完成\n",
      "bp203555426321435 已取消\n",
      "bp203555425911280 已取消\n",
      "bp203555425797145 已取消\n",
      "bp203555422258199 已取消\n",
      "bp203555421061613 已取消\n",
      "bp203555420554262 已完成\n",
      "bp203555420161045 已取消\n",
      "ala203555414770156 已取消\n",
      "bp203555414377156 已取消\n",
      "bp203555408347625 已完成\n",
      "bp203555408216769 已完成\n",
      "bp203555407578130 已完成\n",
      "bp203555406906047 已取消\n",
      "bp203555406905831 已完成\n",
      "vjr203555405988326 已取消\n",
      "bp203555403383823 配送中\n",
      "bp203555400876734 已取消\n",
      "ala203555399172579 已取消\n",
      "bp203555397223437 已取消\n",
      "ala203555396699147 已取消\n",
      "ala203555396568074 已取消\n",
      "bp203555396157921 已完成\n",
      "ala203555396026848 已取消\n",
      "smy203555391325193 已取消\n",
      "bp203555389228040 已完成\n",
      "bp203555388687029 已完成\n",
      "bp203555388162739 配送中\n",
      "bp203555385820167 已取消\n",
      "bp203555385541086 已取消\n",
      "ala203555384640516 已完成\n",
      "bp203555384361437 已完成\n",
      "bp203555384230574 已取消\n",
      "ok203555383312860 已取消\n",
      "bp203555382805507 配送中\n",
      "bp203555382133419 等待退款\n",
      "bp203555380822490 配送中\n",
      "bl203555380052993 已退款\n",
      "ala203555377955840 已取消\n",
      "bp203555375596543 已取消\n",
      "bp203555374023678 已取消\n",
      "bp203555371647447 已取消\n",
      "bl203555370599079 已取消\n",
      "bp203555369681365 已完成\n",
      "bp203555369305085 已完成\n",
      "bp203555366928850 已完成\n",
      "bp203555364324347 已取消\n",
      "bp203555361292964 配送中\n",
      "ala203555361309689 配送中\n",
      "bp203555358409168 配送中\n",
      "ddc203555357360802 已取消\n",
      "ddc203555356836513 已取消\n",
      "bp203555356312014 已取消\n",
      "bp203555355394509 已完成\n",
      "bp203555354231797 已完成\n",
      "ddc203555353952714 已取消\n",
      "bp203555351593416 已取消\n",
      "bp203555350938271 已完成\n",
      "bp203555349775347 已完成\n",
      "bp203555348578758 已取消\n",
      "bp203555339141789 等待退款\n",
      "bp203555337175493 已取消\n",
      "bp203555334422979 配送中\n",
      "bp203555333129200 已完成\n",
      "bp203555332325825 已完成\n",
      "ala203555330884249 已取消\n",
      "bp203555329328111 已取消\n",
      "bp203555327869373 已取消\n",
      "ala203555326427580 已完成\n",
      "bp203555326165655 已完成\n",
      "ala203555325379222 配送中\n",
      "bp203555324085227 已完成\n",
      "bp203555324085226 已完成\n",
      "bp203555322888633 已完成\n",
      "aip203555322905577 充值中\n",
      "bp203555322757560 配送中\n",
      "ala203555319759847 已取消\n",
      "bp203555318580198 配送中\n",
      "bp203555318055908 已完成\n",
      "bp203555316859537 已取消\n",
      "bp203555316728246 已完成\n",
      "bp203555316745185 已取消\n",
      "bp203555315810959 已取消\n",
      "bp203555313582517 已完成\n",
      "bp203555313320589 已取消\n",
      "vjr203555311764447 已取消\n",
      "bp203555311240158 配送中\n",
      "bp203555310436787 已取消\n",
      "ala203555308863922 配送中\n",
      "bp203555308339633 已完成\n",
      "bp203555306504624 异常\n",
      "bp203555304276617 已取消\n",
      "bp203555304145543 已取消\n",
      "bp203555303637978 配送中\n",
      "bp203555303244761 已完成\n",
      "bp203555301655172 已完成\n",
      "bp203555300082306 已完成\n",
      "bp203555300082094 已完成\n",
      "bp203555299050455 异常\n",
      "bp203555297477589 配送中\n",
      "bp203555296429012 配送中\n",
      "bp203555295494784 异常\n",
      "bp203555294839213 已取消\n",
      "bp203555291431340 异常\n",
      "ala203555291169407 已完成\n",
      "ala203555289858474 已完成\n",
      "ala203555288285609 已取消\n",
      "bp203555286712957 已取消\n",
      "bp203555280290216 已完成\n",
      "bp203555278455418 配送中\n",
      "ala203555278341070 已取消\n",
      "bp203555278193062 已取消\n",
      "ok203555276899277 已取消\n",
      "bp203555275457484 已完成\n",
      "bp203555274785187 已完成\n",
      "bp203555274654326 已取消\n",
      "bp203555274260898 已取消\n",
      "bp203555273998753 已取消\n",
      "bp203555273081458 已完成\n",
      "ala203555273098186 已取消\n",
      "bp203555272557169 已取消\n",
      "ala203555271132104 已取消\n",
      "bp203555269280368 已取消\n",
      "bp203555269149085 已取消\n",
      "ala203555267052142 已取消\n",
      "bp203555266789787 已取消\n",
      "ddc203555265479277 已取消\n",
      "ala203555265233861 已取消\n",
      "bp203555264709572 已取消\n",
      "bp203555264561560 已取消\n",
      "bp203555261678185 已取消\n",
      "bp203555260760471 配送中\n",
      "vjr203555260367254 已取消\n",
      "bp203555260105318 已完成\n",
      "bp203555259974035 已取消\n",
      "ala203555259843173 已取消\n",
      "bp203555257893824 已取消\n",
      "bp203555257221520 已完成\n",
      "bp203555256566370 已取消\n",
      "bp203555256304225 已取消\n",
      "ala203555253682784 已取消\n",
      "bp203555252519869 已完成\n",
      "bl203555252503135 已退款\n",
      "bp203555250160572 已完成\n",
      "ala203555249636283 已取消\n",
      "bp203555247522185 已取消\n",
      "bp203555246735965 已取消\n",
      "bp203555245687176 已取消\n",
      "bp203555245573048 已取消\n",
      "bp203555245162887 已取消\n",
      "bp203555243852165 已完成\n",
      "bp203555243459159 已完成\n",
      "ala203555242558390 已取消\n",
      "bp203555242017155 已取消\n",
      "bp203555241362005 已完成\n",
      "bp203555241247668 已取消\n",
      "bp203555239133570 配送中\n",
      "bp203555238871634 已取消\n",
      "bp203555238740561 已取消\n",
      "ala203555237315506 已取消\n",
      "ala203555237036414 已完成\n",
      "bp203555235987837 已完成\n",
      "bp203555235725692 已取消\n",
      "bp203555233383342 配送中\n",
      "bp203555230106541 等待退款\n",
      "bp203555230089593 已完成\n",
      "bp203555230089805 已完成\n",
      "bp203555229958520 已取消\n",
      "bl203555229827660 已完成\n",
      "bp203555229057963 已完成\n",
      "bp203555227730294 已完成\n",
      "bp203555227468361 已完成\n",
      "ddc203555226026568 已取消\n",
      "bp203555226026566 已取消\n",
      "bp203555225764212 已完成\n",
      "bp203555225387943 已完成\n",
      "bp203555223667059 已完成\n",
      "bp203555223405124 已取消\n",
      "bp203555223273842 已取消\n",
      "bp203555223142978 已完成\n",
      "bp203555223028643 已完成\n",
      "bp203555222897569 已取消\n",
      "bp203555220931488 异常\n",
      "bp203555220521536 已取消\n",
      "bp203555220390462 已取消\n",
      "bp203555219603825 配送中\n",
      "bp203555219472957 异常\n",
      "bp203555219341680 已完成\n",
      "bp203555218310045 已完成\n",
      "bp203555218293102 已取消\n",
      "bp203555217113658 异常\n",
      "bp203555214771100 已完成\n",
      "ddc203555214508955 已取消\n",
      "smy203555212263789 已取消\n",
      "bp203555211084341 等待退款\n",
      "bp203555211101081 已完成\n",
      "bp203555210953066 已完成\n",
      "bp203555210445719 已完成\n",
      "smy203555208069481 已取消\n",
      "ala203555206103400 已取消\n",
      "bp203555205464981 配送中\n",
      "bp203555204023188 已取消\n",
      "bp203555203875378 已取消\n",
      "bp203555203481957 已完成\n",
      "bp203555203350884 已取消\n",
      "bp203555202695523 已取消\n",
      "bp203555202319247 已取消\n",
      "bp203555197846065 配送中\n",
      "bp203555197714992 已完成\n",
      "bp203555197731725 已取消\n",
      "bp203555196928559 已完成\n",
      "bp203555196928350 已完成\n",
      "bp203555196272988 已完成\n",
      "ala203555194700123 已取消\n",
      "bp203555192996186 配送中\n",
      "bp203555192750984 配送中\n",
      "bp203555192472110 已完成\n",
      "ala203555191571333 已取消\n",
      "ala203555187098156 已取消\n",
      "bp203555185525291 已取消\n",
      "ddc203555185131865 已取消\n",
      "bp203555183821143 已取消\n",
      "bp203555181478785 已取消\n",
      "bp203555179758121 已完成\n",
      "bp203555177923111 已取消\n",
      "bp203555175449471 配送中\n",
      "bp203555175170389 配送中\n",
      "bp203555174122020 已取消\n",
      "bp203555172172669 已完成\n",
      "ok203555171369506 订单异常\n",
      "bp203555169682300 已完成\n",
      "bp203555167060859 已完成\n",
      "bp203555166781984 已取消\n",
      "bp203555164946769 已完成\n",
      "bp203555162325534 已取消\n",
      "bp203555161670172 配送中\n",
      "bp203555159834958 等待退款\n",
      "ala203555158131227 已取消\n",
      "bp203555156427289 已完成\n",
      "bp203555155788663 已完成\n",
      "bp203555155509580 配送中\n",
      "bp203555155378506 已取消\n",
      "vjr203555153543703 已取消\n",
      "bp203555149873479 已完成\n",
      "ala203555148186484 已取消\n",
      "bp203555147514182 已取消\n",
      "bp203555146351474 已完成\n",
      "bp203555145417237 已完成\n",
      "vjr203555143713092 已取消\n",
      "bp203555143451155 配送中\n",
      "bp203555141091650 已取消\n",
      "bp203555140698642 已完成\n",
      "ala203555140436497 已取消\n",
      "ddc203555140191086 已取消\n",
      "ala203555140060013 已取消\n",
      "bp203555138339342 已完成\n",
      "bp203555136652140 已取消\n",
      "bp203555136504332 等待退款\n",
      "bp203555136373054 已取消\n",
      "bp203555135455549 已完成\n",
      "bp203555135455754 已完成\n",
      "ala203555134161769 已取消\n",
      "bp203555133489467 已完成\n",
      "ddc203555131933542 已取消\n",
      "bp203555131523386 已完成\n",
      "bp203555131130374 已完成\n",
      "ala203555130606085 已取消\n",
      "ddc203555130491748 已取消\n",
      "bsb203555130229603 已完成\n",
      "bp203555130098530 配送中\n",
      "bp203555129688578 已取消\n",
      "ala203555129312096 已取消\n",
      "bp203555126673719 已完成\n",
      "bp203555126542646 等待退款\n",
      "bp203555126542847 配送中\n",
      "bp203555126411774 已完成\n",
      "bp203555125101053 已取消\n",
      "bp203555124969780 已取消\n",
      "ok203555124314620 异常\n",
      "bp203555124052475 已完成\n",
      "bp203555123396915 配送中\n",
      "bp203555122872626 已取消\n",
      "ala203555122365272 已取消\n",
      "bp203555121578839 已完成\n",
      "ala203555121037815 已取消\n",
      "ddc203555119333680 已取消\n",
      "bp203555117498670 已完成\n",
      "ala203555116467028 已取消\n",
      "bp203555116057076 已完成\n",
      "smy203555116073810 已取消\n",
      "bp203555115925804 已完成\n",
      "bp203555115926002 已完成\n",
      "bp203555115794731 已完成\n",
      "bp203555114632015 已完成\n",
      "bp203555112124911 等待退款\n",
      "bp203555110683118 已完成\n",
      "bp203555110551850 已完成\n",
      "bp203555110044492 已取消\n",
      "bp203555109765415 已取消\n",
      "bp203555109782346 已完成\n",
      "bp203555107012901 已取消\n",
      "bp203555106488813 已取消\n",
      "bp203555106357539 已取消\n",
      "bp203555105981255 已取消\n",
      "bp203555105178091 配送中\n",
      "bp203555104260586 已完成\n",
      "bp203555103359814 已取消\n",
      "bp203555103212008 已取消\n",
      "bp203555103080735 已取消\n",
      "bp203555102311235 已完成\n",
      "bp203555101376798 已取消\n",
      "bp203555100066077 已完成\n",
      "bp203555099410716 已完成\n",
      "bp203555099279845 已完成\n",
      "bp203555099148569 已取消\n",
      "bp203555098100196 已取消\n",
      "ddc203555097051414 已取消\n",
      "bp203555096937281 配送中\n",
      "bp203555094430178 配送中\n",
      "bp203555093529407 已完成\n",
      "bp203555091808735 已完成\n",
      "bp203555091022101 已完成\n",
      "bp203555090759956 已取消\n",
      "bsb203555087614429 已完成\n",
      "bp203555087352081 配送中\n",
      "bp203555087090139 已完成\n",
      "bp203555086303503 已取消\n",
      "bp203555085779214 已完成\n",
      "bp203555085517068 已取消\n",
      "bp203555084599769 已取消\n",
      "bp203555084075480 已完成\n",
      "bp203555083961148 已完成\n",
      "bp203555083813334 已完成\n",
      "smy203555083813126 已取消\n",
      "bp203555082633684 已取消\n",
      "bp203555081470779 配送中\n",
      "bp203555081453827 已完成\n",
      "bp203555080946490 配送中\n",
      "bp203555080274177 已完成\n",
      "bp203555079111480 已取消\n",
      "bp203555077784016 已完成\n",
      "bp203555077259727 已取消\n",
      "bp203555074769358 已完成\n",
      "bp203555074638078 已取消\n",
      "bp203555074507213 已取消\n",
      "bp203555074244860 配送中\n",
      "bsb203555072688948 已完成\n",
      "bp203555072147916 已完成\n",
      "bl203555070312698 已退款\n",
      "bp203555069133048 已取消\n",
      "bp203555068625711 已取消\n",
      "bp203555067953609 已取消\n",
      "ala203555066397486 已取消\n",
      "bp203555066135341 已取消\n",
      "bp203555065594310 已完成\n",
      "bl203555065331957 等待退款\n",
      "bl203555064283380 已取消\n",
      "bp203555064021444 已完成\n",
      "bp203555061530866 已取消\n",
      "bp203555060237096 已完成\n",
      "bp203555059826928 已完成\n",
      "bp203555059581733 已取消\n",
      "bp203555059319587 已取消\n",
      "ala203555059040707 已取消\n",
      "bp203555058795298 已取消\n",
      "bp203555057992130 配送中\n",
      "ala203555057598700 已取消\n",
      "bp203555056550337 已取消\n",
      "bp203555056419263 已完成\n",
      "bp203555056042782 已完成\n",
      "bl203555055911709 已取消\n",
      "bl203555055911708 已取消\n",
      "bl203555055894763 已取消\n",
      "bl203555055763900 已取消\n",
      "bl203555055780633 已取消\n",
      "bp203555055370473 已取消\n",
      "bp203555055256342 已取消\n",
      "bp203555055239400 已取消\n",
      "ala203555054715111 已取消\n",
      "bl203555054191033 已取消\n",
      "ala203555053552403 已取消\n",
      "bp203555053159185 已完成\n",
      "bp203555053159184 配送中\n",
      "bp203555052503822 已完成\n",
      "bp203555051586317 已取消\n",
      "bl203555050914229 已取消\n",
      "bp203555050799883 已完成\n",
      "bp203555050783156 已取消\n",
      "bp203555046867722 等待退款\n",
      "bl203555046457571 已取消\n",
      "bl203555046326706 已取消\n",
      "bl203555046343432 已取消\n",
      "bl203555046326496 已取消\n",
      "bl203555046195633 已取消\n",
      "bp203555045147054 已完成\n",
      "bp203555044884702 已完成\n",
      "bp203555044246278 已取消\n",
      "bl203555044098475 已取消\n",
      "bp203555043197701 已取消\n",
      "bp203555043066628 已完成\n",
      "bp203555042804482 已完成\n",
      "bp203555042394537 已完成\n",
      "bp203555042001114 配送中\n",
      "bp203555041345957 已取消\n",
      "bp203555039920896 配送中\n",
      "bp203555039789822 已完成\n",
      "bl203555039920895 已取消\n",
      "bp203555039117528 已取消\n",
      "bp203555038986454 已取消\n",
      "bp203555039003389 配送中\n",
      "bp203555038593440 已取消\n",
      "bp203555035726587 已完成\n",
      "bp203555034530004 已取消\n",
      "bp203555031908563 已完成\n",
      "bp203555031908562 配送中\n",
      "bp203555031532280 已取消\n",
      "bp203555028631760 已取消\n",
      "bp203555027469045 已完成\n",
      "bp203555026944755 已取消\n",
      "bp203555026403741 已取消\n",
      "bp203555026158322 已完成\n",
      "bp203555026027249 已取消\n",
      "bp203555026010523 配送中\n",
      "bp203555022995658 已取消\n",
      "bp203555022471369 已取消\n",
      "smy203555022488302 已取消\n",
      "bp203555021160857 配送中\n",
      "bp203555020767639 配送中\n",
      "bp203555019587783 已取消\n",
      "bp203555019456918 已完成\n",
      "bp203555019473641 已取消\n",
      "smy203555018146197 已取消\n",
      "bp203555016442051 已取消\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "smy203555016179905 已取消\n",
      "ala203555015917971 已取消\n",
      "bp203555015410406 已完成\n",
      "bp203555014099684 已完成\n",
      "bp203555013427391 已取消\n",
      "bp203555011199377 已完成\n",
      "bp203555007415008 配送中\n",
      "bp203555006874000 已完成\n",
      "bp203555006349711 已取消\n",
      "smy203555002958557 已取消\n",
      "bp203554999681756 已取消\n",
      "bp203554998223245 已完成\n",
      "bp203554996667098 已完成\n",
      "bp203554995618521 配送中\n",
      "bp203554995601594 已完成\n",
      "bp203554994684295 已完成\n",
      "bp203554994028934 已取消\n",
      "bp203554993242295 已完成\n",
      "bp203554992603863 已完成\n",
      "ala203554992341718 已完成\n",
      "bp203554991538357 已完成\n",
      "bp203554990096564 已完成\n"
     ]
    }
   ],
   "source": [
    "rdb = redis.StrictRedis(host='rrdb.localdomain',port=16379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "\n",
    "start = time.mktime((2018,2,8,22,0,0,0,0,0))*1000\n",
    "for item in c.pmdb.order_lite_list.find({\"createdAt\":{\"$gt\":start}},{\"id\":1,\"status\":1,'displayStatus':1}):\n",
    "    resp = rdb.execute_command(\"jget\", f\"o:{item['id']}\",\"/status\")\n",
    "    if resp == item['status']:\n",
    "        print(item['id'],item['displayStatus'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "flow_id_listid=\"\"\"bcm203517563149024\n",
    "bcm203517563427571\n",
    "bcm203517563558644\n",
    "bcm203517563820789\n",
    "bcm203517564197607\n",
    "bcm203517564361258\"\"\".split('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'orderId': 'bcm203517563149024', 'flowId': 'bcm213517563181608', 'flowStatus': '0', 'appCode': 'bankcomm'}\n",
      "{'orderId': 'bcm203517563427571', 'flowId': 'bcm213517563411170', 'flowStatus': '0', 'appCode': 'bankcomm'}\n",
      "{'orderId': 'bcm203517563558644', 'flowId': 'bcm213517563673315', 'flowStatus': '0', 'appCode': 'bankcomm'}\n",
      "{'orderId': 'bcm203517563820789', 'flowId': 'bcm213517563804388', 'flowStatus': '0', 'appCode': 'bankcomm'}\n",
      "{'orderId': 'bcm203517563935461', 'flowId': 'bcm213517563935462', 'flowStatus': '0', 'appCode': 'bankcomm'}\n",
      "{'orderId': 'bcm203517564197607', 'flowId': 'bcm213517564197608', 'flowStatus': '0', 'appCode': 'bankcomm'}\n",
      "{'orderId': 'bcm203517564361258', 'flowId': 'bcm213517564345078', 'flowStatus': '0', 'appCode': 'bankcomm'}\n",
      "{'orderId': 'bcm203519258697748', 'flowId': 'bcm213519258697749', 'flowStatus': '0', 'appCode': 'bankcomm'}\n",
      "{'orderId': 'bcm203519269199899', 'flowId': 'bcm213519269183522', 'flowStatus': '0', 'appCode': 'bankcomm'}\n"
     ]
    }
   ],
   "source": [
    "count=0\n",
    "compensation_flow=[]\n",
    "headers = {\n",
    "    'cache-control': \"no-cache\",\n",
    "    'postman-token': \"a17a2666-9bdf-1106-59e7-becefbff613d\"\n",
    "    }\n",
    "for flow_id in flow_id_list:\n",
    "    try:\n",
    "        resp_data=requests.get(\"http://dpp.boluome.com/order/search/\" + flow_id, headers=headers, timeout=60).json()\n",
    "    except:\n",
    "        print('requests error',flow_id)\n",
    "    status = c.prdb_paym(1).hget('p:{}:{}'.format(resp_data['data']['appCode'],resp_data['data']['paymentSerial']),'status')\n",
    "    count+=1\n",
    "    if status in [2,'2']:\n",
    "        print(flow_id,count,end='\\r')\n",
    "        continue\n",
    "    order_id = c.prdb_paym(1).hget('p:{}:{}'.format(resp_data['data']['appCode'],resp_data['data']['paymentSerial']),'id')\n",
    "    item = {\"orderId\":order_id,\"flowId\":resp_data['data']['paymentSerial'],\"flowStatus\":status,\"appCode\":resp_data['data']['appCode']}\n",
    "    compensation_flow.append(item)\n",
    "    print(item)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "list1,list2=[],[]\n",
    "for item in compensation_flow:\n",
    "    if item['orderId']:\n",
    "        list1.append(item)\n",
    "    else:\n",
    "        list2.append(item)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "bcm213517563181608\n",
      "bcm213517563411170\n",
      "bcm213517563673315\n",
      "bcm213517563804388\n",
      "bcm213517563935462\n",
      "bcm213517564197608\n",
      "bcm213517564345078\n",
      "bcm213519258697749\n",
      "bcm213519269183522\n"
     ]
    }
   ],
   "source": [
    "for item in list1:\n",
    "    print(item['flowId'])\n",
    "    c.prdb_paym(1).hmset(\"p:{}:{}\".format(item['appCode'],item['flowId']),{\"status\":2,\"paidAt\":time.time()*1000})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "for item in list2:\n",
    "    print(item['flowId'],item)\n",
    "    flow_id = list(c.prdb_paym(1).scan_iter(\"p:*:{}\".format(item['flowId'])))\n",
    "    print(flow_id)\n",
    "    try:\n",
    "        c.prdb_paym(1).hmset(flow_id[0],{\"status\":2,\"paidAt\":time.time()*1000})\n",
    "    except:\n",
    "        print('err',item)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "import tablib\n",
    "tab_data = tablib.Databook()\n",
    "tab_data.dict=list1\n",
    "with open('compensation_flow.csv', 'wb') as f:\n",
    "    f.write(tab_data.csv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "tab_data.json(default=str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# 遍历redis.payment.p:* 保存至本地\n",
    "payment_data=[]\n",
    "count=0\n",
    "for k in c.prdb_paym(1).scan_iter('p:*'):\n",
    "    try:\n",
    "        resp_data = c.prdb_paym(1).hgetall(k)\n",
    "    except:\n",
    "        continue\n",
    "    payment_data.append(resp_data)\n",
    "    count+=1\n",
    "    print(count,end='\\r')\n",
    "with open('/data/logs/redis_payment.json', 'w') as f:\n",
    "    json.dump(payment_data,f,indent=2,ensure_ascii=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 遍历redis.payment.p:* 移除2017-11-01号之前的key-value\n",
    "import traceback\n",
    "rdb = c.prdb_paym(1)\n",
    "timestamp = time.mktime((2017,11,1,0,0,0,0,0,0))*1000\n",
    "count = 0\n",
    "for key in rdb.scan_iter('p:*'):\n",
    "    if ':records' in key:\n",
    "        rdb.delete(key)\n",
    "        continue\n",
    "    try:\n",
    "        created_at = c.prdb_paym(1).hget(key,'createdAt') or 0\n",
    "    except:\n",
    "        print(key)\n",
    "        traceback.print_exc()\n",
    "        continue\n",
    "    if int(created_at) < timestamp:\n",
    "        rdb.delete(key)\n",
    "        count+=1\n",
    "        print(count,end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "18/115"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "async for key in redis.iscan(match='something*'):\n",
    "    print('Matched:', key)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "c.drdb_new(1).hget(\"p:me:me013435831231431\",\"id\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import asyncio\n",
    "import aioredis\n",
    "\n",
    "loop = asyncio.get_event_loop()\n",
    "\n",
    "async def go():\n",
    "    conn = await aioredis.create_redis_pool(\n",
    "        ('rrdb.localdomain', 16379),\n",
    "        loop=loop,\n",
    "#         encoding='utf8'\n",
    "    )\n",
    "    val = await conn.execute('get','gzip')\n",
    "#     val = await conn.execute('sadd','online',*[1,2,3,4,5])\n",
    "#     val = await conn.execute('scard','online')\n",
    "#     val = await conn.execute('scan','*bp223301490333330')\n",
    "#     async for key in conn.iscan(match='*'):\n",
    "#         print(key)\n",
    "#         break\n",
    "    conn.close()\n",
    "    await conn.wait_closed()\n",
    "    return val\n",
    "loop.run_until_complete(go())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def args(*args):\n",
    "    return args\n",
    "def add(a,b,c):\n",
    "    return a+b+c\n",
    "\n",
    "add(1,*[1,2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# ReDe test\n",
    "import uvloop\n",
    "import asyncio\n",
    "import aioredis\n",
    "loop = asyncio.get_event_loop()\n",
    "\n",
    "async def rdb_setup(loop):\n",
    "    return await aioredis.create_redis_pool(\n",
    "        ('127.0.0.1', 6379),\n",
    "        db=0,\n",
    "        encoding='utf8',\n",
    "        loop=loop\n",
    "    )\n",
    "async def main():\n",
    "    rdb = await rdb_setup(asyncio.get_event_loop())\n",
    "\n",
    "    r1 = await rdb.execute(\"rede.push\",\"test\",10000,json.dumps({\"orderId\":\"10086\"}),\"name\")\n",
    "#     time.sleep(5)\n",
    "    r2 = await rdb.execute(\"rede.look\",\"test\",\"name\")\n",
    "    r3 = await rdb.execute(\"rede.ttn\",\"test\")\n",
    "    r4 = await rdb.execute(\"rede.pull\",\"test\",\"name\")\n",
    "#     r4 = await rdb.execute(\"rede.poll\",\"test\")\n",
    "    return r2,r3,r4\n",
    "loop.run_until_complete(main())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb=aioredis.create_reconnecting_redis(\n",
    "        ('192.168.2.6', 6379),\n",
    "        db=0,\n",
    "        encoding='utf8',\n",
    "    )\n",
    "rdb.gi_running"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from collections import Counter\n",
    "\n",
    "mongo_data=Counter([(item['cityId'],item['relationCode']) for item in c.static.shengxian_yiguo.find({'relationCode': {'$ne': ''}}, {'_id': 0, 'cityId': 1, 'relationCode': 1}) if item['relationCode']])\n",
    "total=0\n",
    "for key, value in mongo_data.items():\n",
    "    if value > 1 and key[0] and key[1]:\n",
    "        total += 1\n",
    "print(total)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "json.loads(x.prdb_mast_0.hget('ac:boluome', '13235209725'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# rdb = redis.StrictRedis(host='192.168.0.11',port=6379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "# rdb.smembers('otosaas_online_activity_1')\n",
    "# activity_list=set([])\n",
    "# for key in (rdb.scan_iter('ooca:*')):\n",
    "#     activity_list|=rdb.smembers(key)\n",
    "    \n",
    "# activity_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 遍历pro环境 退款流水，同步一下数据，把支付的chargeId保存到退款流水中 by bug\n",
    "for refund in x.rdb.scan_iter(\"r:*\"):\n",
    "    item = x.rdb.hgetall(refund)\n",
    "    if 'chargeId' in item:\n",
    "        continue\n",
    "    order_id=item.get('id')\n",
    "    charge_id=x.payment.hget(refund.replace('r:','p:'),'chargeId')\n",
    "    print(order_id,refund,charge_id)\n",
    "    x.refund.hset(refund,'chargeId',charge_id if charge_id else '')\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2017-08-04 工作需求脚本"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# 遍历pro环境 退款未成功的退款流水，相关信息存入r_mapper:91ala:* --by东\n",
    "for refund in x.rdb.scan_iter(\"r:*\"):\n",
    "    item = x.rdb.hgetall(refund)\n",
    "    status=item.get('status','-1')\n",
    "    refund_id=item.get('serialNum')\n",
    "    app_code=item.get('appCode')\n",
    "    if  status in ['0','1'] and refund_id and app_code:\n",
    "        x.rdb_0.set(\"r_mapper:{}:{}\".format(app_code,item['id']),refund_id)\n",
    "        print(refund_id,item['id'],end='\\r')\n",
    "#         break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'{\"appCode\":\"bankcomm\",\"barcode\":\"0610000205030908180110000001380007\",\"billId\":\"201802050150786612\",\"billNo\":\"17700030883\",\"canCancel\":0,\"cancelledAt\":1517813778084,\"categoryId\":\"3001\",\"channel\":\"fft\",\"cityId\":\"0131\",\"cityName\":\"上海\",\"completedAt\":1517814612761,\"createdAt\":1517812877944,\"customerId\":\"294\",\"customerUserId\":\"ef1a694d60ed2185bdbb31e3ce619b7d\",\"displayStatus\":\"已完成\",\"id\":\"bcm203517563149024\",\"isp\":\"有线电视\",\"month\":\"2018年01月\",\"name\":\"01月-有线电视\",\"orderPrice\":138,\"orderType\":\"shenghuojiaofei\",\"orgId\":\"888880003502900\",\"orgName\":\"东方有线网络有限公司\",\"paidList\":[\"????\"],\"partnerId\":\"801802051016643082\",\"partnerStatusCode\":0,\"payChannel\":\"bankcomm\",\"paymentSerial\":\"bcm213517563181608\",\"paymentSerialList\":[\"bcm213517563181608\"],\"price\":138,\"queryName\":\"用户证号\",\"realPrice\":138,\"serialNum\":\"用户证号\",\"status\":4,\"timeline\":[\"02-05 14:41 已下单\",\"02-05 14:41 待支付\",\"02-05 14:56 已取消\",\"02-05 15:10 支付处理中\",\"02-05 15:10 已支付\",\"02-05 15:10 处理中\",\"02-05 15:10 缴费成功\",\"02-05 15:10 已完成\"],\"timeline_new\":[{\"status\":\"已下单\",\"time\":\"2018-02-05 14:41\"},{\"status\":\"待支付\",\"time\":\"2018-02-05 14:41\"},{\"status\":\"订单失败 支付超时\",\"time\":\"2018-02-05 14:56\"},{\"status\":\"已取消\",\"time\":\"2018-02-05 14:56\"},{\"status\":\"支付处理中\",\"time\":\"2018-02-05 15:10\"},{\"status\":\"已支付\",\"time\":\"2018-02-05 15:10\"},{\"status\":\"处理中\",\"time\":\"2018-02-05 15:10\"},{\"status\":\"缴费成功\",\"time\":\"2018-02-05 15:10\"},{\"status\":\"已完成\",\"time\":\"2018-02-05 15:10\"}],\"type\":\"0\",\"updatedAt\":1517814612727,\"userId\":\"ef1a694d60ed2185bdbb31e3ce619b7d\",\"userPhone\":\"17601234466\"}'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 获取rrdb的字段值\n",
    "rdb = redis.StrictRedis(host='rrdb.localdomain',port=16379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "rdb.execute_command(\"jget\", \"o:bcm203517563149024\",\"/\")\n",
    "# rdb.execute_command(\"jsetint\", \"o:jhb201850152194242\",\"/status\",2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 将mongo数据缓存至rrdb\n",
    "import datetime\n",
    "import json\n",
    "from bson.objectid import ObjectId \n",
    "\n",
    "def datetime_handler(x):\n",
    "    if isinstance(x, datetime.datetime):\n",
    "        return x.isoformat()\n",
    "    if isinstance(x,ObjectId):\n",
    "        return str(x)\n",
    "    raise TypeError(\"Unknown type\")\n",
    "\n",
    "def order_message_sync_to_rrdb(mdb,rrdb,order,detail_type=None):\n",
    "    for order_id in order:\n",
    "        resp_data=mdb.order_lite_list.find_one({'id':order_id},{'orderType':1})\n",
    "        \n",
    "        order_type=resp_data['orderType'] if resp_data else detail_type\n",
    "\n",
    "        mongo_data=mdb['order_{}'.format(order_type)].find_one({'id':order_id},{'_id':0})\n",
    "        if not mongo_data:\n",
    "            print(order_id,'order_{}'.format(order_type),'no data')\n",
    "            continue\n",
    "        patch=[]\n",
    "        for key,value in mongo_data.items():\n",
    "            patch.append({'op': 'add', \n",
    "                         'path': '/{}'.format(key), \n",
    "                         'value': value})\n",
    "        resp_push=rrdb.execute_command('JPATCH', 'o:{}'.format(order_id), json.dumps(patch))\n",
    "        if not resp_push:\n",
    "            resp_new=rrdb.execute_command(\"JNew\",\"o:{}\".format(order_id),json.dumps(mongo_data, default=datetime_handler))\n",
    "            if not resp_new:\n",
    "                print(order_id,'push and new both err')\n",
    "                continue\n",
    "        print(order_id,'ok')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#pro\n",
    "order=['tcb202915807156171']\n",
    "prrdb = redis.StrictRedis(host='rrdb.localdomain',port=16379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "order_message_sync_to_rrdb(c.pmdb,prrdb,order)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# stg\n",
    "order=['bl102690753363992']\n",
    "rrdb = redis.StrictRedis(host='192.168.2.6',port=16379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "order_message_sync_to_rrdb(c.smdb,rrdb,order)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dev\n",
    "rrdb = redis.StrictRedis(host='192.168.0.6',port=16379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "order_message_sync_to_rrdb(c.dmdb,rrdb,['bl001871575122186','bp002283195990162','bp0022888'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### rrdb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "rrdb = redis.StrictRedis(\n",
    "    host='192.168.0.6',\n",
    "#     host='rrdb.localdomain',\n",
    "    port=16379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "resp=rrdb.execute_command(\"jget\", \"o:me003141387813455\",\"/\")\n",
    "if resp is None:\n",
    "    print(resp)\n",
    "else:\n",
    "    pprint(json.loads(resp))\n",
    "# rrdb._conn.execute('JGET', 'o:{}'.format(order_id), '/')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "rrdb = redis.StrictRedis(host='rrdb.localdomain',port=16379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "resp=rrdb.execute_command(\"jget\", \"o:smy203063433535476\",\"/\")\n",
    "try:\n",
    "    resp=json.loads(resp)\n",
    "except:\n",
    "    pass\n",
    "pprint(resp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "c.pmdb.order_huafei.find_one({'id':'smy203063433535476'},{'_id':0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "resp==c.pmdb.order_huafei.find_one({'id':'smy203063433535476'},{'_id':0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# rdb.execute_command(\"jget\",\"o:10086111\",\"/\")==None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "path=[{'op': 'add', 'path': '/status/d', 'value': 8},\n",
    "      {'op': 'add', 'path': '/partnerStatus', 'value': 15},\n",
    "      {'op': 'add', 'path': '/displayStatus', 'value': \"已配送\"}]\n",
    "# rdb.execute_command(\"JNEW\",\"o:1008611\",'{\"status\":9,\"partnerStatus\":5,\"displayStatus\":\"已配送\"}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.execute_command('jpatch','o:1008611',json.dumps(path))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.execute_command('jget','o:bp202076722753838','/')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 需求：同步stg-redis数据至新的redis之中"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "def migrate_data(old_rdb=None,new_rdb=None,collection=None,scan_iter=''):\n",
    "    \"\"\"数据同步function\"\"\"\n",
    "    count=0\n",
    "    for key in (collection or old_rdb.scan_iter(scan_iter or \"*\")):\n",
    "        count+=1\n",
    "        key_type=old_rdb.type(key)\n",
    "        if key_type==\"string\":\n",
    "            new_rdb.set(key,old_rdb.get(key))\n",
    "        if key_type==\"hash\":\n",
    "            for k,v in old_rdb.hgetall(key).items():\n",
    "                new_rdb.hset(key,k,v)\n",
    "        if key_type==\"set\":\n",
    "            for k in old_rdb.smembers(key):\n",
    "                new_rdb.sadd(key,k)\n",
    "        if key_type==\"zset\":\n",
    "            for k in old_rdb.zrange(key,0,-1):\n",
    "                score=old_rdb.zscore(key,k)\n",
    "                new_rdb.zadd(key,score,k)\n",
    "        if key_type==\"list\":\n",
    "            for value in old_rdb.lrange(key,0,-1):\n",
    "                new_rdb.rpush(key,value)\n",
    "        print(f'>>>{key}:{count}<<<',end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">>>time:kuangji:332:5:1799<<<1798<<<794<<<1:1748<<<gongsi:534:1:1735<<<\r"
     ]
    }
   ],
   "source": [
    "# 16379 17017\n",
    "old_rdb=redis.StrictRedis(host='192.168.2.6',\n",
    "                            port=conf.REDIS_PORT,\n",
    "                            db=7,\n",
    "                            charset=\"UTF-8\",\n",
    "                            decode_responses=True)\n",
    "new_rdb=redis.StrictRedis(host='dppredis.localdomain',\n",
    "                            port=6379,\n",
    "                            db=7,\n",
    "                            charset=\"UTF-8\",\n",
    "                            decode_responses=True)\n",
    "migrate_data(old_rdb,new_rdb)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bson import json_util\n",
    "import json\n",
    "from datetime import datetime\n",
    "\n",
    "anObject={\"time\":datetime.now()}\n",
    "\n",
    "aa = json.dumps(anObject, default=str)\n",
    "json.loads(aa)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "old_rdb=redis.StrictRedis(host='192.168.0.6',\n",
    "                            port=conf.REDIS_PORT,\n",
    "                            db=0,\n",
    "                            charset=\"UTF-8\",\n",
    "                            decode_responses=True)\n",
    "new_rdb=redis.StrictRedis(host='192.168.2.6',\n",
    "                            port=6379,\n",
    "                            db=0,\n",
    "                            charset=\"UTF-8\",\n",
    "                            decode_responses=True)\n",
    "migrate_data(old_rdb,new_rdb,collection=['ctrip_city_map'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for city_code in new_rdb.zrangebyscore('ctrip_city_map', 0, 2):\n",
    "    print(city_code,end=',')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(new_rdb.zscore('ctrip_city_map', 215565656))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 红包活动\n",
    "rdb=redis.StrictRedis(host='192.168.1.14',port=6379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "count=0\n",
    "# for name in rdb.scan_iter(\"c:*\"):\n",
    "#     try:\n",
    "#         item=rdb.hgetall(name)\n",
    "#     except:\n",
    "#         continue \n",
    "#     rdb.rename(name,name.replace('c:','cb:'))\n",
    "#     for k,v in item.items():\n",
    "#         v_list=v.split('|')\n",
    "#         value='|'.join([k,('|'.join(v_list[:-1]))])\n",
    "#         key=int(time.mktime(time.strptime(v_list[-1],\"%Y%m%d%H%M%S\")))\n",
    "#         rdb.zadd(name,key,value)\n",
    "# #         print(key,value)\n",
    "#     count+=1\n",
    "#     print(count,end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 红包活动回退\n",
    "rdb=redis.StrictRedis(host='192.168.1.14',port=6379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "count=0\n",
    "for name in rdb.scan_iter(\"c:*\"):\n",
    "    rdb.rename(name,name.replace('c:','c_:'))\n",
    "    count+=1\n",
    "    print(count,end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb=redis.StrictRedis(host='192.168.1.14',port=6379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "count=0\n",
    "for name in rdb.scan_iter(\"cb:*\"):\n",
    "    rdb.rename(name,name.replace('cb:','c:'))\n",
    "    count+=1\n",
    "    print(count,end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb=redis.StrictRedis(host='192.168.1.11',port=6379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "count=0\n",
    "for key in rdb.scan_iter(\"*\"):\n",
    "    count+=1\n",
    "    migrate_data(key,0,3)\n",
    "    print(count,end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb=redis.StrictRedis(host='192.168.2.5',port=6379,db=8,charset=\"UTF-8\",decode_responses=True)\n",
    "count=0\n",
    "for key in rdb.scan_iter(\"*\"):\n",
    "    count+=1\n",
    "    migrate_data(key,8,8)\n",
    "    print(count,end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# db=0 to 3\n",
    "for key in ['balance','balance_deal','balance_items','balance_tasks','b:blm_35xw3cc','b:blm_3rego9v','b:blm_j2oy173','b:blm_jktidfr','b:blm_jqc549b','b:blm_rsx7p7r','b:blm_rynr2w3']:\n",
    "    try:\n",
    "        migrate_data(key,0,3)\n",
    "    except:\n",
    "        print(key)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#db=1 to 1\n",
    "rdb=redis.StrictRedis(host='192.168.2.5',port=6379,db=1,charset=\"UTF-8\",decode_responses=True)\n",
    "for key in rdb.scan_iter(\"p:*\"):\n",
    "    migrate_data(key,1,1)\n",
    "for key in rdb.scan_iter(\"up:*\"):\n",
    "    migrate_data(key,1,1)\n",
    "migrate_data('pay_tasks',1,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#db=2 to 2\n",
    "rdb=redis.StrictRedis(host='192.168.2.5',port=6379,db=2,charset=\"UTF-8\",decode_responses=True)\n",
    "count=0\n",
    "for key in rdb.scan_iter(\"*\"):\n",
    "    count+=1\n",
    "    migrate_data(key,2,2)\n",
    "    print(count,end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# 将mongo数据缓存至rrdb\n",
    "import datetime\n",
    "import json\n",
    "from bson.objectid import ObjectId \n",
    "\n",
    "def datetime_handler(x):\n",
    "    if isinstance(x, datetime.datetime):\n",
    "        return x.isoformat()\n",
    "    if isinstance(x,ObjectId):\n",
    "        return str(x)\n",
    "    raise TypeError(\"Unknown type\")\n",
    "\n",
    "count=0\n",
    "for item in x.smdb.order_lite_list.find({},{\"id\":1,\"orderType\":1,\"appCode\":1}):\n",
    "    data=x.smdb[\"order_{}\".format(item[\"orderType\"])].find_one({\"id\":item[\"id\"]},{\"_id\":0,\"__v\":0})\n",
    "    if not data:\n",
    "        continue\n",
    "    app_code=item.get(\"appCode\",\"boluome\")\n",
    "    try:\n",
    "        x.rrdb.execute_command(\"jnew\",\"o:{}:{}\".format(app_code,item['id']),json.dumps(data, default=datetime_handler))\n",
    "        count+=1\n",
    "#         print(count,\"o:{}:{}\".format(app_code,item['id']))\n",
    "    except Exception as why:\n",
    "        print(why,\"o:{}:{}\".format(app_code,item['id']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x.rrdb.execute_command('JGet','o:ala201715737995179','/status')==4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x.rrdb.execute_command('JSetInt','o:ala201715737995179','/status','4')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "for item in c.dmdb.order_lite_list.find({'status':4},{'_id':0},sort=[('_id',-1)]):\n",
    "    resp=requests.post('http://192.168.0.6:8010/sm/order/update_test',json=item)\n",
    "    \n",
    "    print(resp.json)\n",
    "    break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(100):\n",
    "    resp=requests.post('http://192.168.0.6:8010/sm/order/update_test',json=item)\n",
    "    print(resp.json())\n",
    "    break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "resp.text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import threading\n",
    "def worker():\n",
    "    \"\"\"thread worker function\"\"\"\n",
    "    print (requests.post('http://192.168.0.6:8010/sm/order/update_test',json=item).json())\n",
    "for i in range(10):\n",
    "    t = threading.Thread(target=worker,).start()\n",
    "# t.start()\n",
    "# threading.Thread.start()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# for order_id in order:\n",
    "#     order_type=c.pmdb.order_lite_list.find_one({'id':order_id},{'_id':0,'orderType':1})['orderType']\n",
    "#     mongo_data=c.pmdb[f'order_{order_type}'].find_one({'id':order_id},{'paidList':1,'appCode':1})\n",
    "#     paid_id,app_code=mongo_data['paidList'][0],mongo_data['appCode']\n",
    "#     status,created_at,paid_at=c.prdb_paym(1).hmget(f'p:{app_code}:{paid_id}','status','createdAt','paidAt')\n",
    "#     c.prdb_paym(1).hmset(f'p:{app_code}:{paid_id}',{'status':'2','paidAt':str(created_at)})\n",
    "#     print(paid_id,status,created_at,paid_at,)\n",
    "# #     break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from connection import ConnectionTask\n",
    "c=ConnectionTask()\n",
    "rdb=c.prdb_activity(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "c.srdb_new(0).zrevrange('dpp.boluome.com:ctrip.tag.decomposition:锦江',0,10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "for item in rdb.scan_iter(\"c:boluome:blm_3tw8591*\"):\n",
    "    print(item)\n",
    "#     break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for item in rdb.zscan('c:boluome:blm_3tw8591'):\n",
    "    print(item)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.zrange('c:boluome:blm_3tw8591',0,10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.smembers('ooa:boluome')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import json\n",
    "# for item in rdb.scan_iter('a:*'):\n",
    "#     try:\n",
    "#         content=json.loads(rdb.hget(item,'content'))\n",
    "#         print(item,content.get('disposable'))\n",
    "#     except:\n",
    "#         import traceback\n",
    "#         traceback.print_exc()\n",
    "#         pass\n",
    "# #     print(item)\n",
    "# #     break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.hget('a:842','content')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.hset('a:842','content','{\"title\":\"测试红包活动\",\"sts\":1512121807,\"ets\":1514719851,\"threshold\":0,\"value\":0.0,\"total\":0,\"target\":\"campaign\",\"orderType\":[],\"channels\":[],\"appId\":175}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.hget('a:842','content')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.zrange('a:811:used',0,-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.sismember('oopa:tccb','811')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.smembers('oopa:tccb')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.hgetall('a:984')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "srdb=c.srdb_new(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "srdb.hgetall('a:984')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "activity_list=set()\n",
    "for key in srdb.scan_iter('oopa:*'):\n",
    "    activity_list |= srdb.smembers(key)\n",
    "activity_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "prdb_payment=c.prdb_paym(1)\n",
    "for item in c.pmdb.order_lite_list.find({'id':{'$in':['vjr202531081585306']}}):\n",
    "    data=c.pmdb[f'order_{item[\"orderType\"]}'].find_one({'id':item['id']})\n",
    "#     data['orderId']=data.pop('id')\n",
    "    prdb_payment.lpush('compensation', {\n",
    "                        \"orderId\": data['id'],\n",
    "                        \"paymentSerial\": data['paymentSerial'],\n",
    "                        \"orderType\": data['orderType'],\n",
    "                        \"appCode\": data['appCode']\n",
    "                    })\n",
    "    print(data['id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "MONGO_HOST = [\"mongodb://mongoc:Boluome123@mongo-s.localdomain\"]\n",
    "mdb_r=MongoClient(MONGO_HOST, replicaset='foba')['boluome']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for index,item in enumerate(mdb_r.order_waimai.find()):\n",
    "    print(index,end='\\r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# 测试rrdb的设置过期时间功能\n",
    "rdb = redis.StrictRedis(host='192.168.1.42',port=16379,db=0,charset=\"UTF-8\",decode_responses=True)\n",
    "# rdb.execute_command(\"jNew\", \"test:key\",json.dumps({\"code\":0}, nx=5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.execute_command(\"jGet\", \"test:key\", \"/code\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "rdb.execute_command(\"jSet\", \"test:key\", \"/code\", 1, nx=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.execute_command(\"jGet\", \"test:key\", \"/\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.execute_command(\"set\", \"test:expire\", \"life\", ex=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.set(\"test:expire\", \"life\", ex=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdb.set(\"dev:d0a71c212bd7c59b3c3c53f2a26de3434343b343534\",json.dumps({\"a\":1}),expire=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "for key in c.prdb_paym(0).scan_iter('r_mapper:bestpay:*'):\n",
    "    mongo_data= c.pmdb.order_waimai.find_one({'id':key.split(':')[-1]},{'payChannel':1,'paidList':1})\n",
    "    channel=mongo_data['payChannel']\n",
    "    payment_id=mongo_data['paidList'][0]\n",
    "    payment_channel = c.prdb_paym(1).hget('p:bestpay:{}'.format(payment_id),'channel')\n",
    "    try:\n",
    "        refund_id=c.prdb_paym(0).get(key)\n",
    "    except :\n",
    "        continue\n",
    "    refund_channel = c.prdb_paym(2).hget('r:bestpay:{}'.format(refund_id),'channel')\n",
    "    \n",
    "    print(payment_id,payment_channel,refund_id,refund_channel)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for key in c.prdb_paym(1).scan_iter('p:bestpay:*'):\n",
    "    \n",
    "    order_id = c.prdb_paym(1).hget(key,'id')\n",
    "    order_channel = c.pmdb.order_waimai.find_one({'id':},{'payChannel':1})['payChannel']\n",
    "    channel = c.prdb_paym(1).hget(key,'channel')\n",
    "    \n",
    "    try:\n",
    "        refund_id=c.prdb_paym(0).get('r_mapper:bestpay:{}'.format(order_id))\n",
    "    except :\n",
    "        continue\n",
    "    refund_channel = c.prdb_paym(2).hget('r:bestpay:{}'.format(refund_id),'channel')\n",
    "    \n",
    "    print(payment_id,payment_channel,refund_id,refund_channel)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "order_id_set = set()\n",
    "for key in c.prdb_paym(2).scan_iter('r:bestpay:*'):\n",
    "    refund_channel = c.prdb_paym(2).hget(key,'channel')\n",
    "    if refund_channel != 'ele':\n",
    "        continue\n",
    "    order_id = c.prdb_paym(2).hget(key,'id')\n",
    "    payment_id = c.pmdb.order_waimai.find_one({'id':order_id},{'paidList':1})['paidList'][0]\n",
    "    \n",
    "    c.prdb_paym(1).hset('p:bestpay:{}'.format(payment_id),'channel', 'bestpay')\n",
    "    c.prdb_paym(2).hset(key,'channel','bestpay')\n",
    "    \n",
    "#     print(order_id,key,refund_channel)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# c.pmdb.order_waimai.update_many({'appCode':'bestpay','payChannel':'ele'},{'$set':{'payChannel':'bestpay'}})\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# start=time.mktime((2017,12,27,0,0,0,0,0,0))*1000\n",
    "# for item in c.pmdb.order_waimai.find({\n",
    "#     'appCode':'bestpay',\n",
    "#     'createdAt':{'$gte':start},\n",
    "#     'status':{'$in':[11,7]}},\n",
    "#     {'timeline_new':1}):\n",
    "#     print(':'.join([t['status'] for t in item['timeline_new']]))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "huafei\n",
      "huoche\n",
      "jiayouka\n",
      "liuliang\n",
      "mms_daojiaxianhua\n",
      "{'2017-12-29': 4,\n",
      " '2017-12-30': 2,\n",
      " '2017-12-31': 5,\n",
      " '2018-01-02': 2,\n",
      " '2018-01-07': 1,\n",
      " '2018-01-09': 1,\n",
      " '2018-01-11': 1,\n",
      " '2018-01-13': 1,\n",
      " '2018-01-18': 1,\n",
      " '2018-01-24': 1,\n",
      " '2018-01-26': 1}\n"
     ]
    }
   ],
   "source": [
    "# 订单已完成后，红包活动、平台活动未能扣减、统计补偿\n",
    "order_counter={}\n",
    "for order_type in c.pmdb.order_lite_list.distinct(\"orderType\",{\"appCode\":\"bsb\",\"status\":4}):\n",
    "    print(order_type)\n",
    "    for item in c.pmdb[f'order_{order_type}'].find({\"appCode\":\"bsb\",\"status\":4,\"coupon.title\":\"生活礼券\"}):\n",
    "        date=time.strftime(\"%Y-%m-%d\",time.localtime(item['completedAt']/1000))\n",
    "        order_counter.setdefault(date,0)\n",
    "        order_counter[date]+=1\n",
    "#         data=item\n",
    "#         body = {\n",
    "#             \"exchangeName\":\"session\",\n",
    "#             \"routingKey\":\"task\",\n",
    "#             \"payload\":{\n",
    "#                 \"taskName\":\"worker.complete.complete_fetch\",\n",
    "#                 \"queue\":\"complete_tasks\",\n",
    "#                 \"args\":{\n",
    "#                             \"appCode\": data['appCode'],\n",
    "#                             \"orderId\": data['id'],\n",
    "#                             \"userId\": data.get('customerUserId') or data.get('userId'),\n",
    "#                             \"couponId\": data.get('couponId'),\n",
    "#                             \"coupon\": data.get('coupon'),\n",
    "#                             \"activityId\": data.get('activityId'),\n",
    "#                             \"platformActivity\": data.get('platformActivity')\n",
    "#                 }\n",
    "#             }\n",
    "#         }\n",
    "#         resp_data = requests.post('http://rmqrestapi.localdomain:8672/rabbitmq/publish',json=body).json()\n",
    "#         print(item[\"id\"],resp_data['code'])\n",
    "pprint(order_counter)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
