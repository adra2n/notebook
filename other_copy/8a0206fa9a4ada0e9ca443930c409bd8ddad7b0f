{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "Error",
     "evalue": "Option 'port' already defined in <ipython-input-9-ac4af177c9ad>",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mError\u001b[0m                                     Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-21-166a47f51795>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtornado\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdefine\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moptions\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mdefine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"port\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdefault\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m12345\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhelp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"run on the given port\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;31m# from report_worker import report_fetch\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/python3/lib/python3.6/site-packages/tornado/options.py\u001b[0m in \u001b[0;36mdefine\u001b[0;34m(name, default, type, help, metavar, multiple, group, callback)\u001b[0m\n\u001b[1;32m    556\u001b[0m     return options.define(name, default=default, type=type, help=help,\n\u001b[1;32m    557\u001b[0m                           \u001b[0mmetavar\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmetavar\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmultiple\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmultiple\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroup\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgroup\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 558\u001b[0;31m                           callback=callback)\n\u001b[0m\u001b[1;32m    559\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    560\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/python3/lib/python3.6/site-packages/tornado/options.py\u001b[0m in \u001b[0;36mdefine\u001b[0;34m(self, name, default, type, help, metavar, multiple, group, callback)\u001b[0m\n\u001b[1;32m    226\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_options\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    227\u001b[0m             raise Error(\"Option %r already defined in %s\" %\n\u001b[0;32m--> 228\u001b[0;31m                         (name, self._options[name].file_name))\n\u001b[0m\u001b[1;32m    229\u001b[0m         \u001b[0mframe\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getframe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    230\u001b[0m         \u001b[0moptions_file\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mframe\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf_code\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mco_filename\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mError\u001b[0m: Option 'port' already defined in <ipython-input-9-ac4af177c9ad>"
     ]
    }
   ],
   "source": [
    "# coding:utf-8\n",
    "\n",
    "import hashlib\n",
    "import json\n",
    "import tornado.ioloop\n",
    "import tornado.web\n",
    "import conf\n",
    "\n",
    "from tornado.options import define, options\n",
    "define(\"port\", default=12345, help=\"run on the given port\", type=int)\n",
    "\n",
    "# from report_worker import report_fetch\n",
    "\n",
    "'''\n",
    "\n",
    "'''\n",
    "\n",
    "\n",
    "# class Application(tornado.web.Application):\n",
    "\n",
    "#     def __init__(self):\n",
    "#         handlers = [\n",
    "#             (r\"/generate_transaction_report\", GTRandler),\n",
    "#         ]\n",
    "\n",
    "#         settings = dict(\n",
    "#             debug=True,\n",
    "#         )\n",
    "\n",
    "#         super(Application, self).__init__(handlers, **settings)\n",
    "\n",
    "\n",
    "\n",
    "class IndexHandler(tornado.web.RequestHandler):\n",
    "    def get(self):\n",
    "        self.render('index.html')\n",
    "        \n",
    "        \n",
    "class GTRandler(tornado.web.RequestHandler):\n",
    "    def post(self):\n",
    "        start = self.get_argument('start')\n",
    "        end = self.get_argument('end')\n",
    "        email = self.get_argument('email', 'zhangqijia@boluome.com')\n",
    "\n",
    "        report_fetch.apply_async(args=[start, end, email],\n",
    "                                 queue=conf.MQ_REPORT)\n",
    "\n",
    "        self.write(json.dumps({\"code\": 0, 'data': {'status': 'ok'}}))\n",
    "        self.set_header(\"Content-Type\", \"application/json\")\n",
    "        self.finish()\n",
    "\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    tornado.options.parse_command_line()\n",
    "    app = tornado.web.Application(\n",
    "        handlers=[(r'/', IndexHandler), (r'/poem', GTRandler)],\n",
    "    )\n",
    "    http_server = tornado.httpserver.HTTPServer(app)\n",
    "    http_server.listen(options.port)\n",
    "    tornado.ioloop.IOLoop.instance().start()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
